{"id":"node_modules/breakpoint/rewriter/jsrewriter.js","dependencies":[{"name":"/Users/rudraaiyar/Documents/hciui/package.json","includedInParent":true,"mtime":1541009997000},{"name":"/Users/rudraaiyar/Documents/hciui/node_modules/breakpoint/package.json","includedInParent":true,"mtime":1541009977000},{"name":"fs","loc":{"line":3,"column":17},"parent":"/Users/rudraaiyar/Documents/hciui/node_modules/breakpoint/rewriter/jsrewriter.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"path","loc":{"line":4,"column":19},"parent":"/Users/rudraaiyar/Documents/hciui/node_modules/breakpoint/rewriter/jsrewriter.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/path-browserify/index.js"},{"name":"./jstokenizer.js","loc":{"line":5,"column":20},"parent":"/Users/rudraaiyar/Documents/hciui/node_modules/breakpoint/rewriter/jsrewriter.js","resolved":"/Users/rudraaiyar/Documents/hciui/node_modules/breakpoint/rewriter/jstokenizer.js"}],"generated":{"js":"'use strict';\r\n\r\nvar fs = require('fs');\r\nvar path = require('path');\r\nvar jstok = require('./jstokenizer.js');\r\n\r\nvar debugStatementTemplate =\r\n    fs.readFileSync(path.join(__dirname, 'templates/debug-template.js')).toString().trim();\r\nvar exceptionInterceptorTemplate =\r\n    fs.readFileSync(path.join(__dirname, 'templates/exception-template.js')).toString().replace(/\\n\\r?/g, '').replace(/ {4}/g, ' ');\r\n\r\nvar exceptionInterceptorParts = exceptionInterceptorTemplate.split('SPLIT');\r\nvar exceptionInterceptorStart = exceptionInterceptorParts[0].trim();\r\nvar exceptionInterceptorEnd = exceptionInterceptorParts[1].trim();\r\n\r\nfunction buildExceptionInterceptorStart(functionName, file, line) {\r\n    return exceptionInterceptorStart\r\n                .replace('__FUNCTION__', functionName)\r\n                .replace('__FILE__', file)\r\n                .replace('__LINE__', line);\r\n}\r\n\r\nfunction addDebugStatements(filePath, text) {\r\n    var nestingDepth = [0];\r\n    var out = [];\r\n    var line = 1;\r\n    var semicolonOrFunctionBoundryEncountered = true;\r\n    var newlineEncountered = true;\r\n    var functionEncountered = false;\r\n    var wordAfterFunction = null;\r\n\tvar prevToken = null;\r\n\tvar openSwitch = false;\r\n\tvar openCase = false;\r\n\r\n\tvar invalidTokens = ['(', '[', ',', '=', ':', 'return', '|', '?'];\r\n\r\n\tvar breakpoints = [];\r\n\r\n\tfunction buildDebugStatement(file, line, isDebuggerStatement) {\r\n\t\tbreakpoints.push(line);\r\n\t\treturn debugStatementTemplate\r\n\t\t\t.replace('__FILE__', file)\r\n\t\t\t.replace('__LINE__', line)\r\n\t\t\t.replace('__DEBUGGER__', isDebuggerStatement ? 'true' : 'false');\r\n\t}\r\n\r\n    jstok.tokenize(text, function(token, type) {\r\n        /* drop carriage returns... we don't need them. */\r\n        if (token === '\\r') {\r\n            return;\r\n        }\r\n\r\n\t\tif (token == 'switch') {\r\n\t\t\topenSwitch = true;\r\n\t\t}\r\n\t\tif (token == 'case') {\r\n\t\t\topenCase = true;\r\n\t\t}\r\n\r\n        if (token == '\"use strict\"' || token == \"'use strict'\") {\r\n            token = '/* Aardwolf cannot work in strict mode. Disabling. '+token.split('').join('_')+' */';\r\n        }\r\n\r\n        /*\r\n            Whenever we encounter some code:\r\n            - if it's after a semicolon and a newline, or at the beginning of a function,\r\n              insert a debug statement in front of it\r\n            - it it's anywhere else, reset the semicolon and newline flags because we're not\r\n              anywhere near a place where a debug statement should be inserted\r\n\r\n            Yes, this rewriter assumes that you're using semicolons in your code.\r\n        */\r\n        if (['word', 'number', 'string', 'char'].indexOf(type) > -1) {\r\n            if (type != 'char' &&\r\n                token != 'else' &&\r\n                semicolonOrFunctionBoundryEncountered &&\r\n                newlineEncountered)\r\n            {\r\n                var isDebuggerStatement = token === 'debugger';\r\n                out.push(buildDebugStatement(filePath, line, isDebuggerStatement));\r\n\r\n                if (isDebuggerStatement) {\r\n                    /* Comment out the debugger statement to avoid triggering any native debuggers */\r\n                    token = '/*' + token + '*/';\r\n                }\r\n            }\r\n\r\n            semicolonOrFunctionBoundryEncountered = false;\r\n            newlineEncountered = false;\r\n        }\r\n\r\n        if (type == 'word') {\r\n            if (functionEncountered) {\r\n                wordAfterFunction = token;\r\n            }\r\n            functionEncountered = false;\r\n        }\r\n\r\n        if (token === 'function') {\r\n            /* keep a separate nesting depth counter for each nested function */\r\n            nestingDepth.push(0);\r\n            out.push(token);\r\n\r\n            functionEncountered = true;\r\n            wordAfterFunction = null;\r\n        }\r\n        else if (token === '{') {\r\n            ++nestingDepth[nestingDepth.length-1];\r\n\r\n            out.push(token);\r\n\r\n            /* we have just entered a function body - insert the first part of the exception interception block */\r\n            if (nestingDepth.length > 1 && nestingDepth[nestingDepth.length-1] === 1) {\r\n                out.push(buildExceptionInterceptorStart(wordAfterFunction || '<anonymous>', filePath, line));\r\n            }\r\n\r\n\t\t\tif (openSwitch) {\r\n\t\t\t\topenSwitch = false;\r\n\t\t\t} else if (invalidTokens.indexOf(prevToken) < 0) {\r\n\t\t\t\tsemicolonOrFunctionBoundryEncountered = true;\r\n\t\t\t}\r\n        }\r\n        else if (token === '}') {\r\n            --nestingDepth[nestingDepth.length-1];\r\n\r\n            /* we are about to exit a function body - insert the last part of the exception interception block */\r\n            if (nestingDepth.length > 1 && nestingDepth[nestingDepth.length-1] === 0) {\r\n                out.push(exceptionInterceptorEnd);\r\n                nestingDepth.pop();\r\n            }\r\n\t\t\tsemicolonOrFunctionBoundryEncountered = true;\r\n\r\n            out.push(token);\r\n        }\r\n\t\telse if (token === ':' && openCase) {\r\n\t\t\topenCase = false;\r\n\t\t\tsemicolonOrFunctionBoundryEncountered = true;\r\n\t\t\tout.push(token);\r\n\t\t}\r\n        else {\r\n            if (token === ';') {\r\n                semicolonOrFunctionBoundryEncountered = true;\r\n            }\r\n            else if (token === '\\n') {\r\n                ++line;\r\n                newlineEncountered = true;\r\n            }\r\n            else if (type == 'comment') {\r\n                /* comments can span multiple lines so we need to adjust line count accordingly */\r\n                var parts = token.split('\\n');\r\n                line += parts.length - 1;\r\n            }\r\n            out.push(token);\r\n        }\r\n\t\tif (type != 'comment' && type != 'whitespace' && type != 'newline') {\r\n\t\t\tprevToken = token;\r\n\t\t}\r\n    });\r\n\r\n\r\n\treturn {\r\n\t\tfile: buildExceptionInterceptorStart('<toplevel>', filePath, 0) + out.join('') + exceptionInterceptorEnd,\r\n\t\tbreakpoints: breakpoints\r\n\t};\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    addDebugStatements: addDebugStatements\r\n};\r\n\r\n","map":{"mappings":[{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/breakpoint/rewriter/jsrewriter.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}}],"sources":{"node_modules/breakpoint/rewriter/jsrewriter.js":"'use strict';\r\n\r\nvar fs = require('fs');\r\nvar path = require('path');\r\nvar jstok = require('./jstokenizer.js');\r\n\r\nvar debugStatementTemplate =\r\n    fs.readFileSync(path.join(__dirname, 'templates/debug-template.js')).toString().trim();\r\nvar exceptionInterceptorTemplate =\r\n    fs.readFileSync(path.join(__dirname, 'templates/exception-template.js')).toString().replace(/\\n\\r?/g, '').replace(/ {4}/g, ' ');\r\n\r\nvar exceptionInterceptorParts = exceptionInterceptorTemplate.split('SPLIT');\r\nvar exceptionInterceptorStart = exceptionInterceptorParts[0].trim();\r\nvar exceptionInterceptorEnd = exceptionInterceptorParts[1].trim();\r\n\r\nfunction buildExceptionInterceptorStart(functionName, file, line) {\r\n    return exceptionInterceptorStart\r\n                .replace('__FUNCTION__', functionName)\r\n                .replace('__FILE__', file)\r\n                .replace('__LINE__', line);\r\n}\r\n\r\nfunction addDebugStatements(filePath, text) {\r\n    var nestingDepth = [0];\r\n    var out = [];\r\n    var line = 1;\r\n    var semicolonOrFunctionBoundryEncountered = true;\r\n    var newlineEncountered = true;\r\n    var functionEncountered = false;\r\n    var wordAfterFunction = null;\r\n\tvar prevToken = null;\r\n\tvar openSwitch = false;\r\n\tvar openCase = false;\r\n\r\n\tvar invalidTokens = ['(', '[', ',', '=', ':', 'return', '|', '?'];\r\n\r\n\tvar breakpoints = [];\r\n\r\n\tfunction buildDebugStatement(file, line, isDebuggerStatement) {\r\n\t\tbreakpoints.push(line);\r\n\t\treturn debugStatementTemplate\r\n\t\t\t.replace('__FILE__', file)\r\n\t\t\t.replace('__LINE__', line)\r\n\t\t\t.replace('__DEBUGGER__', isDebuggerStatement ? 'true' : 'false');\r\n\t}\r\n\r\n    jstok.tokenize(text, function(token, type) {\r\n        /* drop carriage returns... we don't need them. */\r\n        if (token === '\\r') {\r\n            return;\r\n        }\r\n\r\n\t\tif (token == 'switch') {\r\n\t\t\topenSwitch = true;\r\n\t\t}\r\n\t\tif (token == 'case') {\r\n\t\t\topenCase = true;\r\n\t\t}\r\n\r\n        if (token == '\"use strict\"' || token == \"'use strict'\") {\r\n            token = '/* Aardwolf cannot work in strict mode. Disabling. '+token.split('').join('_')+' */';\r\n        }\r\n\r\n        /*\r\n            Whenever we encounter some code:\r\n            - if it's after a semicolon and a newline, or at the beginning of a function,\r\n              insert a debug statement in front of it\r\n            - it it's anywhere else, reset the semicolon and newline flags because we're not\r\n              anywhere near a place where a debug statement should be inserted\r\n\r\n            Yes, this rewriter assumes that you're using semicolons in your code.\r\n        */\r\n        if (['word', 'number', 'string', 'char'].indexOf(type) > -1) {\r\n            if (type != 'char' &&\r\n                token != 'else' &&\r\n                semicolonOrFunctionBoundryEncountered &&\r\n                newlineEncountered)\r\n            {\r\n                var isDebuggerStatement = token === 'debugger';\r\n                out.push(buildDebugStatement(filePath, line, isDebuggerStatement));\r\n\r\n                if (isDebuggerStatement) {\r\n                    /* Comment out the debugger statement to avoid triggering any native debuggers */\r\n                    token = '/*' + token + '*/';\r\n                }\r\n            }\r\n\r\n            semicolonOrFunctionBoundryEncountered = false;\r\n            newlineEncountered = false;\r\n        }\r\n\r\n        if (type == 'word') {\r\n            if (functionEncountered) {\r\n                wordAfterFunction = token;\r\n            }\r\n            functionEncountered = false;\r\n        }\r\n\r\n        if (token === 'function') {\r\n            /* keep a separate nesting depth counter for each nested function */\r\n            nestingDepth.push(0);\r\n            out.push(token);\r\n\r\n            functionEncountered = true;\r\n            wordAfterFunction = null;\r\n        }\r\n        else if (token === '{') {\r\n            ++nestingDepth[nestingDepth.length-1];\r\n\r\n            out.push(token);\r\n\r\n            /* we have just entered a function body - insert the first part of the exception interception block */\r\n            if (nestingDepth.length > 1 && nestingDepth[nestingDepth.length-1] === 1) {\r\n                out.push(buildExceptionInterceptorStart(wordAfterFunction || '<anonymous>', filePath, line));\r\n            }\r\n\r\n\t\t\tif (openSwitch) {\r\n\t\t\t\topenSwitch = false;\r\n\t\t\t} else if (invalidTokens.indexOf(prevToken) < 0) {\r\n\t\t\t\tsemicolonOrFunctionBoundryEncountered = true;\r\n\t\t\t}\r\n        }\r\n        else if (token === '}') {\r\n            --nestingDepth[nestingDepth.length-1];\r\n\r\n            /* we are about to exit a function body - insert the last part of the exception interception block */\r\n            if (nestingDepth.length > 1 && nestingDepth[nestingDepth.length-1] === 0) {\r\n                out.push(exceptionInterceptorEnd);\r\n                nestingDepth.pop();\r\n            }\r\n\t\t\tsemicolonOrFunctionBoundryEncountered = true;\r\n\r\n            out.push(token);\r\n        }\r\n\t\telse if (token === ':' && openCase) {\r\n\t\t\topenCase = false;\r\n\t\t\tsemicolonOrFunctionBoundryEncountered = true;\r\n\t\t\tout.push(token);\r\n\t\t}\r\n        else {\r\n            if (token === ';') {\r\n                semicolonOrFunctionBoundryEncountered = true;\r\n            }\r\n            else if (token === '\\n') {\r\n                ++line;\r\n                newlineEncountered = true;\r\n            }\r\n            else if (type == 'comment') {\r\n                /* comments can span multiple lines so we need to adjust line count accordingly */\r\n                var parts = token.split('\\n');\r\n                line += parts.length - 1;\r\n            }\r\n            out.push(token);\r\n        }\r\n\t\tif (type != 'comment' && type != 'whitespace' && type != 'newline') {\r\n\t\t\tprevToken = token;\r\n\t\t}\r\n    });\r\n\r\n\r\n\treturn {\r\n\t\tfile: buildExceptionInterceptorStart('<toplevel>', filePath, 0) + out.join('') + exceptionInterceptorEnd,\r\n\t\tbreakpoints: breakpoints\r\n\t};\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    addDebugStatements: addDebugStatements\r\n};\r\n\r\n"},"lineCount":172}},"hash":"b90b11a790467af82a63dc8c75182efb","cacheData":{"env":{}}}