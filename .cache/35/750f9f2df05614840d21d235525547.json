{"id":"node_modules/stack-trace/lib/stack-trace.js","dependencies":[{"name":"/Users/rudraaiyar/Documents/hciui/package.json","includedInParent":true,"mtime":1541009997000},{"name":"/Users/rudraaiyar/Documents/hciui/node_modules/stack-trace/package.json","includedInParent":true,"mtime":1541009977000}],"generated":{"js":"exports.get = function(belowFn) {\n  var oldLimit = Error.stackTraceLimit;\n  Error.stackTraceLimit = Infinity;\n\n  var dummyObject = {};\n\n  var v8Handler = Error.prepareStackTrace;\n  Error.prepareStackTrace = function(dummyObject, v8StackTrace) {\n    return v8StackTrace;\n  };\n  Error.captureStackTrace(dummyObject, belowFn || exports.get);\n\n  var v8StackTrace = dummyObject.stack;\n  Error.prepareStackTrace = v8Handler;\n  Error.stackTraceLimit = oldLimit;\n\n  return v8StackTrace;\n};\n\nexports.parse = function(err) {\n  if (!err.stack) {\n    return [];\n  }\n\n  var self = this;\n  var lines = err.stack.split('\\n').slice(1);\n\n  return lines\n    .map(function(line) {\n      if (line.match(/^\\s*[-]{4,}$/)) {\n        return self._createParsedCallSite({\n          fileName: line,\n          lineNumber: null,\n          functionName: null,\n          typeName: null,\n          methodName: null,\n          columnNumber: null,\n          'native': null,\n        });\n      }\n\n      var lineMatch = line.match(/at (?:(.+)\\s+\\()?(?:(.+?):(\\d+)(?::(\\d+))?|([^)]+))\\)?/);\n      if (!lineMatch) {\n        return;\n      }\n\n      var object = null;\n      var method = null;\n      var functionName = null;\n      var typeName = null;\n      var methodName = null;\n      var isNative = (lineMatch[5] === 'native');\n\n      if (lineMatch[1]) {\n        functionName = lineMatch[1];\n        var methodStart = functionName.lastIndexOf('.');\n        if (functionName[methodStart-1] == '.')\n          methodStart--;\n        if (methodStart > 0) {\n          object = functionName.substr(0, methodStart);\n          method = functionName.substr(methodStart + 1);\n          var objectEnd = object.indexOf('.Module');\n          if (objectEnd > 0) {\n            functionName = functionName.substr(objectEnd + 1);\n            object = object.substr(0, objectEnd);\n          }\n        }\n        typeName = null;\n      }\n\n      if (method) {\n        typeName = object;\n        methodName = method;\n      }\n\n      if (method === '<anonymous>') {\n        methodName = null;\n        functionName = null;\n      }\n\n      var properties = {\n        fileName: lineMatch[2] || null,\n        lineNumber: parseInt(lineMatch[3], 10) || null,\n        functionName: functionName,\n        typeName: typeName,\n        methodName: methodName,\n        columnNumber: parseInt(lineMatch[4], 10) || null,\n        'native': isNative,\n      };\n\n      return self._createParsedCallSite(properties);\n    })\n    .filter(function(callSite) {\n      return !!callSite;\n    });\n};\n\nfunction CallSite(properties) {\n  for (var property in properties) {\n    this[property] = properties[property];\n  }\n}\n\nvar strProperties = [\n  'this',\n  'typeName',\n  'functionName',\n  'methodName',\n  'fileName',\n  'lineNumber',\n  'columnNumber',\n  'function',\n  'evalOrigin'\n];\nvar boolProperties = [\n  'topLevel',\n  'eval',\n  'native',\n  'constructor'\n];\nstrProperties.forEach(function (property) {\n  CallSite.prototype[property] = null;\n  CallSite.prototype['get' + property[0].toUpperCase() + property.substr(1)] = function () {\n    return this[property];\n  }\n});\nboolProperties.forEach(function (property) {\n  CallSite.prototype[property] = false;\n  CallSite.prototype['is' + property[0].toUpperCase() + property.substr(1)] = function () {\n    return this[property];\n  }\n});\n\nexports._createParsedCallSite = function(properties) {\n  return new CallSite(properties);\n};\n","map":{"mappings":[{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/stack-trace/lib/stack-trace.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}}],"sources":{"node_modules/stack-trace/lib/stack-trace.js":"exports.get = function(belowFn) {\n  var oldLimit = Error.stackTraceLimit;\n  Error.stackTraceLimit = Infinity;\n\n  var dummyObject = {};\n\n  var v8Handler = Error.prepareStackTrace;\n  Error.prepareStackTrace = function(dummyObject, v8StackTrace) {\n    return v8StackTrace;\n  };\n  Error.captureStackTrace(dummyObject, belowFn || exports.get);\n\n  var v8StackTrace = dummyObject.stack;\n  Error.prepareStackTrace = v8Handler;\n  Error.stackTraceLimit = oldLimit;\n\n  return v8StackTrace;\n};\n\nexports.parse = function(err) {\n  if (!err.stack) {\n    return [];\n  }\n\n  var self = this;\n  var lines = err.stack.split('\\n').slice(1);\n\n  return lines\n    .map(function(line) {\n      if (line.match(/^\\s*[-]{4,}$/)) {\n        return self._createParsedCallSite({\n          fileName: line,\n          lineNumber: null,\n          functionName: null,\n          typeName: null,\n          methodName: null,\n          columnNumber: null,\n          'native': null,\n        });\n      }\n\n      var lineMatch = line.match(/at (?:(.+)\\s+\\()?(?:(.+?):(\\d+)(?::(\\d+))?|([^)]+))\\)?/);\n      if (!lineMatch) {\n        return;\n      }\n\n      var object = null;\n      var method = null;\n      var functionName = null;\n      var typeName = null;\n      var methodName = null;\n      var isNative = (lineMatch[5] === 'native');\n\n      if (lineMatch[1]) {\n        functionName = lineMatch[1];\n        var methodStart = functionName.lastIndexOf('.');\n        if (functionName[methodStart-1] == '.')\n          methodStart--;\n        if (methodStart > 0) {\n          object = functionName.substr(0, methodStart);\n          method = functionName.substr(methodStart + 1);\n          var objectEnd = object.indexOf('.Module');\n          if (objectEnd > 0) {\n            functionName = functionName.substr(objectEnd + 1);\n            object = object.substr(0, objectEnd);\n          }\n        }\n        typeName = null;\n      }\n\n      if (method) {\n        typeName = object;\n        methodName = method;\n      }\n\n      if (method === '<anonymous>') {\n        methodName = null;\n        functionName = null;\n      }\n\n      var properties = {\n        fileName: lineMatch[2] || null,\n        lineNumber: parseInt(lineMatch[3], 10) || null,\n        functionName: functionName,\n        typeName: typeName,\n        methodName: methodName,\n        columnNumber: parseInt(lineMatch[4], 10) || null,\n        'native': isNative,\n      };\n\n      return self._createParsedCallSite(properties);\n    })\n    .filter(function(callSite) {\n      return !!callSite;\n    });\n};\n\nfunction CallSite(properties) {\n  for (var property in properties) {\n    this[property] = properties[property];\n  }\n}\n\nvar strProperties = [\n  'this',\n  'typeName',\n  'functionName',\n  'methodName',\n  'fileName',\n  'lineNumber',\n  'columnNumber',\n  'function',\n  'evalOrigin'\n];\nvar boolProperties = [\n  'topLevel',\n  'eval',\n  'native',\n  'constructor'\n];\nstrProperties.forEach(function (property) {\n  CallSite.prototype[property] = null;\n  CallSite.prototype['get' + property[0].toUpperCase() + property.substr(1)] = function () {\n    return this[property];\n  }\n});\nboolProperties.forEach(function (property) {\n  CallSite.prototype[property] = false;\n  CallSite.prototype['is' + property[0].toUpperCase() + property.substr(1)] = function () {\n    return this[property];\n  }\n});\n\nexports._createParsedCallSite = function(properties) {\n  return new CallSite(properties);\n};\n"},"lineCount":137}},"hash":"0599e475eba51f2f0d9ef33fa34d1fc1","cacheData":{"env":{}}}