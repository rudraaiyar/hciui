{"id":"node_modules/utile/lib/base64.js","dependencies":[{"name":"/Users/rudraaiyar/Documents/hciui/package.json","includedInParent":true,"mtime":1541009997000},{"name":"/Users/rudraaiyar/Documents/hciui/node_modules/utile/package.json","includedInParent":true,"mtime":1541009977000},{"name":"buffer","parent":"/Users/rudraaiyar/Documents/hciui/node_modules/utile/lib/base64.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n/*\n * base64.js: An extremely simple implementation of base64 encoding / decoding using node.js Buffers\n *\n * (C) 2010, Nodejitsu Inc.\n *\n */\nvar base64 = exports; //\n// ### function encode (unencoded)\n// #### @unencoded {string} The string to base64 encode\n// Encodes the specified string to base64 using node.js Buffers.\n//\n\nbase64.encode = function (unencoded) {\n  var encoded;\n\n  try {\n    encoded = new Buffer(unencoded || '').toString('base64');\n  } catch (ex) {\n    return null;\n  }\n\n  return encoded;\n}; //\n// ### function decode (encoded)\n// #### @encoded {string} The string to base64 decode\n// Decodes the specified string from base64 using node.js Buffers.\n//\n\n\nbase64.decode = function (encoded) {\n  var decoded;\n\n  try {\n    decoded = new Buffer(encoded || '', 'base64').toString('utf8');\n  } catch (ex) {\n    return null;\n  }\n\n  return decoded;\n};","map":{"mappings":[{"generated":{"line":2,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":8,"column":0}},{"name":"base64","generated":{"line":8,"column":4},"source":"node_modules/utile/lib/base64.js","original":{"line":8,"column":4}},{"generated":{"line":8,"column":10},"source":"node_modules/utile/lib/base64.js","original":{"line":8,"column":10}},{"name":"exports","generated":{"line":8,"column":13},"source":"node_modules/utile/lib/base64.js","original":{"line":8,"column":13}},{"generated":{"line":8,"column":20},"source":"node_modules/utile/lib/base64.js","original":{"line":8,"column":0}},{"generated":{"line":8,"column":22},"source":"node_modules/utile/lib/base64.js","original":{"line":10,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":11,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":12,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":13,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":14,"column":0}},{"name":"base64","generated":{"line":14,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":15,"column":0}},{"generated":{"line":14,"column":6},"source":"node_modules/utile/lib/base64.js","original":{"line":15,"column":6}},{"name":"encode","generated":{"line":14,"column":7},"source":"node_modules/utile/lib/base64.js","original":{"line":15,"column":7}},{"generated":{"line":14,"column":13},"source":"node_modules/utile/lib/base64.js","original":{"line":15,"column":0}},{"generated":{"line":14,"column":16},"source":"node_modules/utile/lib/base64.js","original":{"line":15,"column":16}},{"name":"unencoded","generated":{"line":14,"column":26},"source":"node_modules/utile/lib/base64.js","original":{"line":15,"column":26}},{"generated":{"line":14,"column":35},"source":"node_modules/utile/lib/base64.js","original":{"line":15,"column":16}},{"generated":{"line":14,"column":37},"source":"node_modules/utile/lib/base64.js","original":{"line":15,"column":37}},{"generated":{"line":15,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":16,"column":2}},{"name":"encoded","generated":{"line":15,"column":6},"source":"node_modules/utile/lib/base64.js","original":{"line":16,"column":6}},{"generated":{"line":15,"column":13},"source":"node_modules/utile/lib/base64.js","original":{"line":16,"column":2}},{"generated":{"line":17,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":18,"column":2}},{"generated":{"line":17,"column":6},"source":"node_modules/utile/lib/base64.js","original":{"line":18,"column":6}},{"name":"encoded","generated":{"line":18,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":19,"column":4}},{"name":"encoded","generated":{"line":18,"column":4},"source":"node_modules/utile/lib/base64.js","original":{"line":19,"column":4}},{"generated":{"line":18,"column":11},"source":"node_modules/utile/lib/base64.js","original":{"line":19,"column":11}},{"generated":{"line":18,"column":14},"source":"node_modules/utile/lib/base64.js","original":{"line":19,"column":14}},{"name":"Buffer","generated":{"line":18,"column":18},"source":"node_modules/utile/lib/base64.js","original":{"line":19,"column":18}},{"generated":{"line":18,"column":24},"source":"node_modules/utile/lib/base64.js","original":{"line":19,"column":14}},{"name":"unencoded","generated":{"line":18,"column":25},"source":"node_modules/utile/lib/base64.js","original":{"line":19,"column":25}},{"generated":{"line":18,"column":34},"source":"node_modules/utile/lib/base64.js","original":{"line":19,"column":34}},{"generated":{"line":18,"column":38},"source":"node_modules/utile/lib/base64.js","original":{"line":19,"column":38}},{"generated":{"line":18,"column":40},"source":"node_modules/utile/lib/base64.js","original":{"line":19,"column":14}},{"name":"toString","generated":{"line":18,"column":42},"source":"node_modules/utile/lib/base64.js","original":{"line":19,"column":42}},{"generated":{"line":18,"column":50},"source":"node_modules/utile/lib/base64.js","original":{"line":19,"column":14}},{"generated":{"line":18,"column":51},"source":"node_modules/utile/lib/base64.js","original":{"line":19,"column":51}},{"generated":{"line":18,"column":59},"source":"node_modules/utile/lib/base64.js","original":{"line":19,"column":14}},{"generated":{"line":18,"column":60},"source":"node_modules/utile/lib/base64.js","original":{"line":19,"column":4}},{"generated":{"line":19,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":20,"column":3}},{"generated":{"line":19,"column":3},"source":"node_modules/utile/lib/base64.js","original":{"line":18,"column":2}},{"generated":{"line":19,"column":4},"source":"node_modules/utile/lib/base64.js","original":{"line":21,"column":2}},{"name":"ex","generated":{"line":19,"column":11},"source":"node_modules/utile/lib/base64.js","original":{"line":21,"column":9}},{"generated":{"line":19,"column":13},"source":"node_modules/utile/lib/base64.js","original":{"line":21,"column":2}},{"generated":{"line":19,"column":15},"source":"node_modules/utile/lib/base64.js","original":{"line":21,"column":13}},{"generated":{"line":20,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":22,"column":4}},{"generated":{"line":20,"column":11},"source":"node_modules/utile/lib/base64.js","original":{"line":22,"column":11}},{"generated":{"line":20,"column":15},"source":"node_modules/utile/lib/base64.js","original":{"line":22,"column":4}},{"generated":{"line":21,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":23,"column":3}},{"generated":{"line":23,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":25,"column":2}},{"name":"encoded","generated":{"line":23,"column":9},"source":"node_modules/utile/lib/base64.js","original":{"line":25,"column":9}},{"generated":{"line":23,"column":16},"source":"node_modules/utile/lib/base64.js","original":{"line":25,"column":2}},{"generated":{"line":24,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":26,"column":1}},{"generated":{"line":24,"column":1},"source":"node_modules/utile/lib/base64.js","original":{"line":15,"column":0}},{"generated":{"line":24,"column":3},"source":"node_modules/utile/lib/base64.js","original":{"line":28,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":29,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":30,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":31,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":32,"column":0}},{"name":"base64","generated":{"line":31,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":33,"column":0}},{"generated":{"line":31,"column":6},"source":"node_modules/utile/lib/base64.js","original":{"line":33,"column":6}},{"name":"decode","generated":{"line":31,"column":7},"source":"node_modules/utile/lib/base64.js","original":{"line":33,"column":7}},{"generated":{"line":31,"column":13},"source":"node_modules/utile/lib/base64.js","original":{"line":33,"column":0}},{"generated":{"line":31,"column":16},"source":"node_modules/utile/lib/base64.js","original":{"line":33,"column":16}},{"name":"encoded","generated":{"line":31,"column":26},"source":"node_modules/utile/lib/base64.js","original":{"line":33,"column":26}},{"generated":{"line":31,"column":33},"source":"node_modules/utile/lib/base64.js","original":{"line":33,"column":16}},{"generated":{"line":31,"column":35},"source":"node_modules/utile/lib/base64.js","original":{"line":33,"column":35}},{"generated":{"line":32,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":34,"column":2}},{"name":"decoded","generated":{"line":32,"column":6},"source":"node_modules/utile/lib/base64.js","original":{"line":34,"column":6}},{"generated":{"line":32,"column":13},"source":"node_modules/utile/lib/base64.js","original":{"line":34,"column":2}},{"generated":{"line":34,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":36,"column":2}},{"generated":{"line":34,"column":6},"source":"node_modules/utile/lib/base64.js","original":{"line":36,"column":6}},{"name":"decoded","generated":{"line":35,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":37,"column":4}},{"name":"decoded","generated":{"line":35,"column":4},"source":"node_modules/utile/lib/base64.js","original":{"line":37,"column":4}},{"generated":{"line":35,"column":11},"source":"node_modules/utile/lib/base64.js","original":{"line":37,"column":11}},{"generated":{"line":35,"column":14},"source":"node_modules/utile/lib/base64.js","original":{"line":37,"column":14}},{"name":"Buffer","generated":{"line":35,"column":18},"source":"node_modules/utile/lib/base64.js","original":{"line":37,"column":18}},{"generated":{"line":35,"column":24},"source":"node_modules/utile/lib/base64.js","original":{"line":37,"column":14}},{"name":"encoded","generated":{"line":35,"column":25},"source":"node_modules/utile/lib/base64.js","original":{"line":37,"column":25}},{"generated":{"line":35,"column":32},"source":"node_modules/utile/lib/base64.js","original":{"line":37,"column":32}},{"generated":{"line":35,"column":36},"source":"node_modules/utile/lib/base64.js","original":{"line":37,"column":36}},{"generated":{"line":35,"column":38},"source":"node_modules/utile/lib/base64.js","original":{"line":37,"column":14}},{"generated":{"line":35,"column":40},"source":"node_modules/utile/lib/base64.js","original":{"line":37,"column":40}},{"generated":{"line":35,"column":48},"source":"node_modules/utile/lib/base64.js","original":{"line":37,"column":14}},{"name":"toString","generated":{"line":35,"column":50},"source":"node_modules/utile/lib/base64.js","original":{"line":37,"column":50}},{"generated":{"line":35,"column":58},"source":"node_modules/utile/lib/base64.js","original":{"line":37,"column":14}},{"generated":{"line":35,"column":59},"source":"node_modules/utile/lib/base64.js","original":{"line":37,"column":59}},{"generated":{"line":35,"column":65},"source":"node_modules/utile/lib/base64.js","original":{"line":37,"column":14}},{"generated":{"line":35,"column":66},"source":"node_modules/utile/lib/base64.js","original":{"line":37,"column":4}},{"generated":{"line":36,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":38,"column":3}},{"generated":{"line":36,"column":3},"source":"node_modules/utile/lib/base64.js","original":{"line":36,"column":2}},{"generated":{"line":36,"column":4},"source":"node_modules/utile/lib/base64.js","original":{"line":39,"column":2}},{"name":"ex","generated":{"line":36,"column":11},"source":"node_modules/utile/lib/base64.js","original":{"line":39,"column":9}},{"generated":{"line":36,"column":13},"source":"node_modules/utile/lib/base64.js","original":{"line":39,"column":2}},{"generated":{"line":36,"column":15},"source":"node_modules/utile/lib/base64.js","original":{"line":39,"column":13}},{"generated":{"line":37,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":40,"column":4}},{"generated":{"line":37,"column":11},"source":"node_modules/utile/lib/base64.js","original":{"line":40,"column":11}},{"generated":{"line":37,"column":15},"source":"node_modules/utile/lib/base64.js","original":{"line":40,"column":4}},{"generated":{"line":38,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":41,"column":3}},{"generated":{"line":40,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":43,"column":2}},{"name":"decoded","generated":{"line":40,"column":9},"source":"node_modules/utile/lib/base64.js","original":{"line":43,"column":9}},{"generated":{"line":40,"column":16},"source":"node_modules/utile/lib/base64.js","original":{"line":43,"column":2}},{"generated":{"line":41,"column":0},"source":"node_modules/utile/lib/base64.js","original":{"line":44,"column":1}},{"generated":{"line":41,"column":1},"source":"node_modules/utile/lib/base64.js","original":{"line":33,"column":0}}],"sources":{"node_modules/utile/lib/base64.js":"/*\n * base64.js: An extremely simple implementation of base64 encoding / decoding using node.js Buffers\n *\n * (C) 2010, Nodejitsu Inc.\n *\n */\n\nvar base64 = exports;\n\n//\n// ### function encode (unencoded)\n// #### @unencoded {string} The string to base64 encode\n// Encodes the specified string to base64 using node.js Buffers.\n//\nbase64.encode = function (unencoded) {\n  var encoded;\n\n  try {\n    encoded = new Buffer(unencoded || '').toString('base64');\n  }\n  catch (ex) {\n    return null;\n  }\n\n  return encoded;\n};\n\n//\n// ### function decode (encoded)\n// #### @encoded {string} The string to base64 decode\n// Decodes the specified string from base64 using node.js Buffers.\n//\nbase64.decode = function (encoded) {\n  var decoded;\n\n  try {\n    decoded = new Buffer(encoded || '', 'base64').toString('utf8');\n  }\n  catch (ex) {\n    return null;\n  }\n\n  return decoded;\n};"},"lineCount":null}},"hash":"55688ee15df682f07ea9ee84fbb0c508","cacheData":{"env":{}}}