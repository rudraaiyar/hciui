{"id":"node_modules/breakpoint/rewriter/jstokenizer.js","dependencies":[{"name":"/Users/rudraaiyar/Documents/hciui/package.json","includedInParent":true,"mtime":1541009997000},{"name":"/Users/rudraaiyar/Documents/hciui/node_modules/breakpoint/package.json","includedInParent":true,"mtime":1541009977000}],"generated":{"js":"'use strict';\r\n\r\n/* A simple JS tokenizer. We're really only interested in a couple of keywords, parentheses, \r\n   brackets and semicolons, so it doesn't need to be complete as long as it correctly handles\r\n   multi-word tokens such as strings and comments.\r\n*/\r\nfunction tokenize(str, onToken) {\r\n    var len = str.length;\r\n    var pos = 0;\r\n    var validRegexPos = false;\r\n    \r\n    while (pos < len) {\r\n        var c = str[pos];\r\n        \r\n        if (c === '\"' || c === \"'\") {\r\n            extractString(c);\r\n        }\r\n        else if (c === '/' && str[pos+1] === '/') {\r\n            extractSingleLineComment();\r\n        }\r\n        else if (c === '/' && str[pos+1] === '*') {\r\n            extractMultiLineComment();\r\n        }\r\n        else if (c === '/' && validRegexPos) {\r\n            extractRegexLiteral();\r\n        }\r\n        else if (c === ' ' || c === '\\t') {\r\n            extractWhitespace();\r\n        }\r\n        else if ('0123456789'.indexOf(c) > -1) {\r\n            extractNumber();\r\n        }\r\n        else if (c.match(/^[a-zA-Z_$]$/) !== null) {\r\n            extractWord();\r\n        }\r\n        else {\r\n            extractChar();\r\n        }\r\n    }\r\n    \r\n    function onTokenInternal(token, type) {\r\n        /* A slash following an assigment operator, a semicolon or an \r\n           opening paren can be a regex literal delimiter. */\r\n        if (type === 'char' && ':=;({'.indexOf(token) > -1) {\r\n            validRegexPos = true;\r\n        } else if (!((['comment', 'whitespace']).indexOf(type) > -1)) {\r\n            validRegexPos = false;\r\n        }\r\n        \r\n        onToken(token, type);\r\n    }\r\n    \r\n    function extractSingleLineComment() {\r\n        var endPos = str.indexOf(\"\\n\", pos);\r\n        if (endPos === -1) {\r\n            endPos = len - 1;\r\n        }\r\n        onTokenInternal(str.substring(pos, endPos), 'comment');\r\n        pos = endPos;\r\n    }\r\n    \r\n    function extractMultiLineComment() {\r\n        var endPos = pos;\r\n        while (!(str[++endPos] === '*' && str[endPos+1] === '/'));\r\n        endPos += 2;\r\n        onTokenInternal(str.substring(pos, endPos), 'comment');\r\n        pos = endPos;\r\n    }\r\n    \r\n    function extractRegexLiteral() {\r\n        var endPos = pos;\r\n        /* regex literal body /.../ */\r\n        while (str[++endPos] != '/') {\r\n            if (str[endPos] == '\\\\') {\r\n                ++endPos;\r\n            }\r\n        }\r\n        /* flags following the body */\r\n        while ('gimy'.indexOf(str[++endPos]) !== -1);\r\n        onTokenInternal(str.substring(pos, endPos), 'regex');\r\n        pos = endPos;\r\n    }\r\n    \r\n    function extractString(quoteChar) {\r\n        var endPos = pos;\r\n        while (str[++endPos] != quoteChar) {\r\n            if (str[endPos] == '\\\\') {\r\n                ++endPos;\r\n            }\r\n        }\r\n        ++endPos;\r\n        onTokenInternal(str.substring(pos, endPos), 'string');\r\n        pos = endPos;\r\n    }\r\n    \r\n    function extractNumber() {\r\n        var endPos = pos;\r\n        while ('0123456789.eE'.indexOf(str[++endPos]) !== -1);\r\n        onTokenInternal(str.substring(pos, endPos), 'number');\r\n        pos = endPos;\r\n    }\r\n    \r\n    function extractWord() {\r\n        var endPos = pos;\r\n        while (str[++endPos].match(/^[a-zA-Z_$0-9]$/) !== null);\r\n        onTokenInternal(str.substring(pos, endPos), 'word');\r\n        pos = endPos;\r\n    }\r\n    \r\n    function extractWhitespace() {\r\n        var endPos = pos;\r\n        while (' \\t'.indexOf(str[++endPos]) !== -1);\r\n        onTokenInternal(str.substring(pos, endPos), 'whitespace');\r\n        pos = endPos;\r\n    }\r\n    \r\n    function extractChar() {\r\n        var c = str.substr(pos, 1);\r\n        onTokenInternal(c, c === '\\n' ? 'newline' : 'char');\r\n        ++pos;\r\n    }\r\n}\r\n\r\nmodule.exports.tokenize = tokenize;","map":{"mappings":[{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/breakpoint/rewriter/jstokenizer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}}],"sources":{"node_modules/breakpoint/rewriter/jstokenizer.js":"'use strict';\r\n\r\n/* A simple JS tokenizer. We're really only interested in a couple of keywords, parentheses, \r\n   brackets and semicolons, so it doesn't need to be complete as long as it correctly handles\r\n   multi-word tokens such as strings and comments.\r\n*/\r\nfunction tokenize(str, onToken) {\r\n    var len = str.length;\r\n    var pos = 0;\r\n    var validRegexPos = false;\r\n    \r\n    while (pos < len) {\r\n        var c = str[pos];\r\n        \r\n        if (c === '\"' || c === \"'\") {\r\n            extractString(c);\r\n        }\r\n        else if (c === '/' && str[pos+1] === '/') {\r\n            extractSingleLineComment();\r\n        }\r\n        else if (c === '/' && str[pos+1] === '*') {\r\n            extractMultiLineComment();\r\n        }\r\n        else if (c === '/' && validRegexPos) {\r\n            extractRegexLiteral();\r\n        }\r\n        else if (c === ' ' || c === '\\t') {\r\n            extractWhitespace();\r\n        }\r\n        else if ('0123456789'.indexOf(c) > -1) {\r\n            extractNumber();\r\n        }\r\n        else if (c.match(/^[a-zA-Z_$]$/) !== null) {\r\n            extractWord();\r\n        }\r\n        else {\r\n            extractChar();\r\n        }\r\n    }\r\n    \r\n    function onTokenInternal(token, type) {\r\n        /* A slash following an assigment operator, a semicolon or an \r\n           opening paren can be a regex literal delimiter. */\r\n        if (type === 'char' && ':=;({'.indexOf(token) > -1) {\r\n            validRegexPos = true;\r\n        } else if (!((['comment', 'whitespace']).indexOf(type) > -1)) {\r\n            validRegexPos = false;\r\n        }\r\n        \r\n        onToken(token, type);\r\n    }\r\n    \r\n    function extractSingleLineComment() {\r\n        var endPos = str.indexOf(\"\\n\", pos);\r\n        if (endPos === -1) {\r\n            endPos = len - 1;\r\n        }\r\n        onTokenInternal(str.substring(pos, endPos), 'comment');\r\n        pos = endPos;\r\n    }\r\n    \r\n    function extractMultiLineComment() {\r\n        var endPos = pos;\r\n        while (!(str[++endPos] === '*' && str[endPos+1] === '/'));\r\n        endPos += 2;\r\n        onTokenInternal(str.substring(pos, endPos), 'comment');\r\n        pos = endPos;\r\n    }\r\n    \r\n    function extractRegexLiteral() {\r\n        var endPos = pos;\r\n        /* regex literal body /.../ */\r\n        while (str[++endPos] != '/') {\r\n            if (str[endPos] == '\\\\') {\r\n                ++endPos;\r\n            }\r\n        }\r\n        /* flags following the body */\r\n        while ('gimy'.indexOf(str[++endPos]) !== -1);\r\n        onTokenInternal(str.substring(pos, endPos), 'regex');\r\n        pos = endPos;\r\n    }\r\n    \r\n    function extractString(quoteChar) {\r\n        var endPos = pos;\r\n        while (str[++endPos] != quoteChar) {\r\n            if (str[endPos] == '\\\\') {\r\n                ++endPos;\r\n            }\r\n        }\r\n        ++endPos;\r\n        onTokenInternal(str.substring(pos, endPos), 'string');\r\n        pos = endPos;\r\n    }\r\n    \r\n    function extractNumber() {\r\n        var endPos = pos;\r\n        while ('0123456789.eE'.indexOf(str[++endPos]) !== -1);\r\n        onTokenInternal(str.substring(pos, endPos), 'number');\r\n        pos = endPos;\r\n    }\r\n    \r\n    function extractWord() {\r\n        var endPos = pos;\r\n        while (str[++endPos].match(/^[a-zA-Z_$0-9]$/) !== null);\r\n        onTokenInternal(str.substring(pos, endPos), 'word');\r\n        pos = endPos;\r\n    }\r\n    \r\n    function extractWhitespace() {\r\n        var endPos = pos;\r\n        while (' \\t'.indexOf(str[++endPos]) !== -1);\r\n        onTokenInternal(str.substring(pos, endPos), 'whitespace');\r\n        pos = endPos;\r\n    }\r\n    \r\n    function extractChar() {\r\n        var c = str.substr(pos, 1);\r\n        onTokenInternal(c, c === '\\n' ? 'newline' : 'char');\r\n        ++pos;\r\n    }\r\n}\r\n\r\nmodule.exports.tokenize = tokenize;"},"lineCount":124}},"hash":"953eda144740bae1ddd98497b32febe0","cacheData":{"env":{}}}