{"id":"node_modules/yargs/lib/command.js","dependencies":[{"name":"/Users/rudraaiyar/Documents/hciui/package.json","includedInParent":true,"mtime":1541009997000},{"name":"/Users/rudraaiyar/Documents/hciui/node_modules/yargs/package.json","includedInParent":true,"mtime":1541009984000},{"name":"path","loc":{"line":1,"column":21},"parent":"/Users/rudraaiyar/Documents/hciui/node_modules/yargs/lib/command.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/path-browserify/index.js"},{"name":"util","loc":{"line":2,"column":24},"parent":"/Users/rudraaiyar/Documents/hciui/node_modules/yargs/lib/command.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/util/util.js"},{"name":"require-directory","loc":{"line":63,"column":12},"parent":"/Users/rudraaiyar/Documents/hciui/node_modules/yargs/lib/command.js","resolved":"/Users/rudraaiyar/Documents/hciui/node_modules/require-directory/index.js"},{"name":"which-module","loc":{"line":69,"column":24},"parent":"/Users/rudraaiyar/Documents/hciui/node_modules/yargs/lib/command.js","resolved":"/Users/rudraaiyar/Documents/hciui/node_modules/which-module/index.js"}],"generated":{"js":"const path = require('path')\nconst inspect = require('util').inspect\n\n// handles parsing positional arguments,\n// and populating argv with said positional\n// arguments.\nmodule.exports = function (yargs, usage, validation) {\n  const self = {}\n\n  var handlers = {}\n  self.addHandler = function (cmd, description, builder, handler) {\n    if (typeof cmd === 'object') {\n      const commandString = typeof cmd.command === 'string' ? cmd.command : moduleName(cmd)\n      self.addHandler(commandString, extractDesc(cmd), cmd.builder, cmd.handler)\n      return\n    }\n\n    // allow a module to be provided instead of separate builder and handler\n    if (typeof builder === 'object' && builder.builder && typeof builder.handler === 'function') {\n      self.addHandler(cmd, description, builder.builder, builder.handler)\n      return\n    }\n\n    if (description !== false) {\n      usage.command(cmd, description)\n    }\n\n    // we should not register a handler if no\n    // builder is provided, e.g., user will\n    // handle command themselves with '_'.\n    var parsedCommand = parseCommand(cmd)\n    handlers[parsedCommand.cmd] = {\n      original: cmd,\n      handler: handler,\n      builder: builder || {},\n      demanded: parsedCommand.demanded,\n      optional: parsedCommand.optional\n    }\n  }\n\n  self.addDirectory = function (dir, context, req, callerFile, opts) {\n    opts = opts || {}\n    // disable recursion to support nested directories of subcommands\n    if (typeof opts.recurse !== 'boolean') opts.recurse = false\n    // exclude 'json', 'coffee' from require-directory defaults\n    if (!Array.isArray(opts.extensions)) opts.extensions = ['js']\n    // allow consumer to define their own visitor function\n    const parentVisit = typeof opts.visit === 'function' ? opts.visit : function (o) { return o }\n    // call addHandler via visitor function\n    opts.visit = function (obj, joined, filename) {\n      const visited = parentVisit(obj, joined, filename)\n      // allow consumer to skip modules with their own visitor\n      if (visited) {\n        // check for cyclic reference\n        // each command file path should only be seen once per execution\n        if (~context.files.indexOf(joined)) return visited\n        // keep track of visited files in context.files\n        context.files.push(joined)\n        self.addHandler(visited)\n      }\n      return visited\n    }\n    require('require-directory')({ require: req, filename: callerFile }, dir, opts)\n  }\n\n  // lookup module object from require()d command and derive name\n  // if module was not require()d and no name given, throw error\n  function moduleName (obj) {\n    const mod = require('which-module')(obj)\n    if (!mod) throw new Error('No command name given for module: ' + inspect(obj))\n    return commandFromFilename(mod.filename)\n  }\n\n  // derive command name from filename\n  function commandFromFilename (filename) {\n    return path.basename(filename, path.extname(filename))\n  }\n\n  function extractDesc (obj) {\n    for (var keys = ['describe', 'description', 'desc'], i = 0, l = keys.length, test; i < l; i++) {\n      test = obj[keys[i]]\n      if (typeof test === 'string' || typeof test === 'boolean') return test\n    }\n    return false\n  }\n\n  function parseCommand (cmd) {\n    var splitCommand = cmd.split(/\\s/)\n    var bregex = /\\.*[\\][<>]/g\n    var parsedCommand = {\n      cmd: (splitCommand.shift()).replace(bregex, ''),\n      demanded: [],\n      optional: []\n    }\n    splitCommand.forEach(function (cmd, i) {\n      var variadic = false\n      if (/\\.+[\\]>]/.test(cmd) && i === splitCommand.length - 1) variadic = true\n      if (/^\\[/.test(cmd)) {\n        parsedCommand.optional.push({\n          cmd: cmd.replace(bregex, ''),\n          variadic: variadic\n        })\n      } else {\n        parsedCommand.demanded.push({\n          cmd: cmd.replace(bregex, ''),\n          variadic: variadic\n        })\n      }\n    })\n    return parsedCommand\n  }\n\n  self.getCommands = function () {\n    return Object.keys(handlers)\n  }\n\n  self.getCommandHandlers = function () {\n    return handlers\n  }\n\n  self.runCommand = function (command, yargs, parsed) {\n    var argv = parsed.argv\n    var commandHandler = handlers[command]\n    var innerArgv = argv\n    var currentContext = yargs.getContext()\n    var parentCommands = currentContext.commands.slice()\n    currentContext.commands.push(command)\n    if (typeof commandHandler.builder === 'function') {\n      // a function can be provided, which builds\n      // up a yargs chain and possibly returns it.\n      innerArgv = commandHandler.builder(yargs.reset(parsed.aliases))\n      // if the builder function did not yet parse argv with reset yargs\n      // and did not explicitly set a usage() string, then apply the\n      // original command string as usage() for consistent behavior with\n      // options object below\n      if (yargs.parsed === false) {\n        if (typeof yargs.getUsageInstance().getUsage() === 'undefined') {\n          yargs.usage('$0 ' + (parentCommands.length ? parentCommands.join(' ') + ' ' : '') + commandHandler.original)\n        }\n        innerArgv = innerArgv ? innerArgv.argv : yargs.argv\n      } else {\n        innerArgv = yargs.parsed.argv\n      }\n    } else if (typeof commandHandler.builder === 'object') {\n      // as a short hand, an object can instead be provided, specifying\n      // the options that a command takes.\n      innerArgv = yargs.reset(parsed.aliases)\n      innerArgv.usage('$0 ' + (parentCommands.length ? parentCommands.join(' ') + ' ' : '') + commandHandler.original)\n      Object.keys(commandHandler.builder).forEach(function (key) {\n        innerArgv.option(key, commandHandler.builder[key])\n      })\n      innerArgv = innerArgv.argv\n    }\n\n    populatePositional(commandHandler, innerArgv, currentContext, yargs)\n\n    if (commandHandler.handler) {\n      commandHandler.handler(innerArgv)\n    }\n    currentContext.commands.pop()\n    return innerArgv\n  }\n\n  function populatePositional (commandHandler, argv, context, yargs) {\n    argv._ = argv._.slice(context.commands.length) // nuke the current commands\n    var demanded = commandHandler.demanded.slice(0)\n    var optional = commandHandler.optional.slice(0)\n\n    validation.positionalCount(demanded.length, argv._.length)\n\n    while (demanded.length) {\n      var demand = demanded.shift()\n      if (demand.variadic) argv[demand.cmd] = []\n      if (!argv._.length) break\n      if (demand.variadic) argv[demand.cmd] = argv._.splice(0)\n      else argv[demand.cmd] = argv._.shift()\n      postProcessPositional(yargs, argv, demand.cmd)\n    }\n\n    while (optional.length) {\n      var maybe = optional.shift()\n      if (maybe.variadic) argv[maybe.cmd] = []\n      if (!argv._.length) break\n      if (maybe.variadic) argv[maybe.cmd] = argv._.splice(0)\n      else argv[maybe.cmd] = argv._.shift()\n      postProcessPositional(yargs, argv, maybe.cmd)\n    }\n\n    argv._ = context.commands.concat(argv._)\n  }\n\n  // TODO move positional arg logic to yargs-parser and remove this duplication\n  function postProcessPositional (yargs, argv, key) {\n    var coerce = yargs.getOptions().coerce[key]\n    if (typeof coerce === 'function') {\n      try {\n        argv[key] = coerce(argv[key])\n      } catch (err) {\n        yargs.getUsageInstance().fail(err.message, err)\n      }\n    }\n  }\n\n  self.reset = function () {\n    handlers = {}\n    return self\n  }\n\n  return self\n}\n","map":{"mappings":[{"source":"node_modules/yargs/lib/command.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/yargs/lib/command.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}}],"sources":{"node_modules/yargs/lib/command.js":"const path = require('path')\nconst inspect = require('util').inspect\n\n// handles parsing positional arguments,\n// and populating argv with said positional\n// arguments.\nmodule.exports = function (yargs, usage, validation) {\n  const self = {}\n\n  var handlers = {}\n  self.addHandler = function (cmd, description, builder, handler) {\n    if (typeof cmd === 'object') {\n      const commandString = typeof cmd.command === 'string' ? cmd.command : moduleName(cmd)\n      self.addHandler(commandString, extractDesc(cmd), cmd.builder, cmd.handler)\n      return\n    }\n\n    // allow a module to be provided instead of separate builder and handler\n    if (typeof builder === 'object' && builder.builder && typeof builder.handler === 'function') {\n      self.addHandler(cmd, description, builder.builder, builder.handler)\n      return\n    }\n\n    if (description !== false) {\n      usage.command(cmd, description)\n    }\n\n    // we should not register a handler if no\n    // builder is provided, e.g., user will\n    // handle command themselves with '_'.\n    var parsedCommand = parseCommand(cmd)\n    handlers[parsedCommand.cmd] = {\n      original: cmd,\n      handler: handler,\n      builder: builder || {},\n      demanded: parsedCommand.demanded,\n      optional: parsedCommand.optional\n    }\n  }\n\n  self.addDirectory = function (dir, context, req, callerFile, opts) {\n    opts = opts || {}\n    // disable recursion to support nested directories of subcommands\n    if (typeof opts.recurse !== 'boolean') opts.recurse = false\n    // exclude 'json', 'coffee' from require-directory defaults\n    if (!Array.isArray(opts.extensions)) opts.extensions = ['js']\n    // allow consumer to define their own visitor function\n    const parentVisit = typeof opts.visit === 'function' ? opts.visit : function (o) { return o }\n    // call addHandler via visitor function\n    opts.visit = function (obj, joined, filename) {\n      const visited = parentVisit(obj, joined, filename)\n      // allow consumer to skip modules with their own visitor\n      if (visited) {\n        // check for cyclic reference\n        // each command file path should only be seen once per execution\n        if (~context.files.indexOf(joined)) return visited\n        // keep track of visited files in context.files\n        context.files.push(joined)\n        self.addHandler(visited)\n      }\n      return visited\n    }\n    require('require-directory')({ require: req, filename: callerFile }, dir, opts)\n  }\n\n  // lookup module object from require()d command and derive name\n  // if module was not require()d and no name given, throw error\n  function moduleName (obj) {\n    const mod = require('which-module')(obj)\n    if (!mod) throw new Error('No command name given for module: ' + inspect(obj))\n    return commandFromFilename(mod.filename)\n  }\n\n  // derive command name from filename\n  function commandFromFilename (filename) {\n    return path.basename(filename, path.extname(filename))\n  }\n\n  function extractDesc (obj) {\n    for (var keys = ['describe', 'description', 'desc'], i = 0, l = keys.length, test; i < l; i++) {\n      test = obj[keys[i]]\n      if (typeof test === 'string' || typeof test === 'boolean') return test\n    }\n    return false\n  }\n\n  function parseCommand (cmd) {\n    var splitCommand = cmd.split(/\\s/)\n    var bregex = /\\.*[\\][<>]/g\n    var parsedCommand = {\n      cmd: (splitCommand.shift()).replace(bregex, ''),\n      demanded: [],\n      optional: []\n    }\n    splitCommand.forEach(function (cmd, i) {\n      var variadic = false\n      if (/\\.+[\\]>]/.test(cmd) && i === splitCommand.length - 1) variadic = true\n      if (/^\\[/.test(cmd)) {\n        parsedCommand.optional.push({\n          cmd: cmd.replace(bregex, ''),\n          variadic: variadic\n        })\n      } else {\n        parsedCommand.demanded.push({\n          cmd: cmd.replace(bregex, ''),\n          variadic: variadic\n        })\n      }\n    })\n    return parsedCommand\n  }\n\n  self.getCommands = function () {\n    return Object.keys(handlers)\n  }\n\n  self.getCommandHandlers = function () {\n    return handlers\n  }\n\n  self.runCommand = function (command, yargs, parsed) {\n    var argv = parsed.argv\n    var commandHandler = handlers[command]\n    var innerArgv = argv\n    var currentContext = yargs.getContext()\n    var parentCommands = currentContext.commands.slice()\n    currentContext.commands.push(command)\n    if (typeof commandHandler.builder === 'function') {\n      // a function can be provided, which builds\n      // up a yargs chain and possibly returns it.\n      innerArgv = commandHandler.builder(yargs.reset(parsed.aliases))\n      // if the builder function did not yet parse argv with reset yargs\n      // and did not explicitly set a usage() string, then apply the\n      // original command string as usage() for consistent behavior with\n      // options object below\n      if (yargs.parsed === false) {\n        if (typeof yargs.getUsageInstance().getUsage() === 'undefined') {\n          yargs.usage('$0 ' + (parentCommands.length ? parentCommands.join(' ') + ' ' : '') + commandHandler.original)\n        }\n        innerArgv = innerArgv ? innerArgv.argv : yargs.argv\n      } else {\n        innerArgv = yargs.parsed.argv\n      }\n    } else if (typeof commandHandler.builder === 'object') {\n      // as a short hand, an object can instead be provided, specifying\n      // the options that a command takes.\n      innerArgv = yargs.reset(parsed.aliases)\n      innerArgv.usage('$0 ' + (parentCommands.length ? parentCommands.join(' ') + ' ' : '') + commandHandler.original)\n      Object.keys(commandHandler.builder).forEach(function (key) {\n        innerArgv.option(key, commandHandler.builder[key])\n      })\n      innerArgv = innerArgv.argv\n    }\n\n    populatePositional(commandHandler, innerArgv, currentContext, yargs)\n\n    if (commandHandler.handler) {\n      commandHandler.handler(innerArgv)\n    }\n    currentContext.commands.pop()\n    return innerArgv\n  }\n\n  function populatePositional (commandHandler, argv, context, yargs) {\n    argv._ = argv._.slice(context.commands.length) // nuke the current commands\n    var demanded = commandHandler.demanded.slice(0)\n    var optional = commandHandler.optional.slice(0)\n\n    validation.positionalCount(demanded.length, argv._.length)\n\n    while (demanded.length) {\n      var demand = demanded.shift()\n      if (demand.variadic) argv[demand.cmd] = []\n      if (!argv._.length) break\n      if (demand.variadic) argv[demand.cmd] = argv._.splice(0)\n      else argv[demand.cmd] = argv._.shift()\n      postProcessPositional(yargs, argv, demand.cmd)\n    }\n\n    while (optional.length) {\n      var maybe = optional.shift()\n      if (maybe.variadic) argv[maybe.cmd] = []\n      if (!argv._.length) break\n      if (maybe.variadic) argv[maybe.cmd] = argv._.splice(0)\n      else argv[maybe.cmd] = argv._.shift()\n      postProcessPositional(yargs, argv, maybe.cmd)\n    }\n\n    argv._ = context.commands.concat(argv._)\n  }\n\n  // TODO move positional arg logic to yargs-parser and remove this duplication\n  function postProcessPositional (yargs, argv, key) {\n    var coerce = yargs.getOptions().coerce[key]\n    if (typeof coerce === 'function') {\n      try {\n        argv[key] = coerce(argv[key])\n      } catch (err) {\n        yargs.getUsageInstance().fail(err.message, err)\n      }\n    }\n  }\n\n  self.reset = function () {\n    handlers = {}\n    return self\n  }\n\n  return self\n}\n"},"lineCount":211}},"hash":"5e7cf1f6108da238b1bf7f2f0cd980e1","cacheData":{"env":{}}}