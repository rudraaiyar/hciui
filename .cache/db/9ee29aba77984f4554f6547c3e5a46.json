{"id":"node_modules/normalize-package-data/lib/normalize.js","dependencies":[{"name":"/Users/rudraaiyar/Documents/hciui/package.json","includedInParent":true,"mtime":1541009997000},{"name":"/Users/rudraaiyar/Documents/hciui/node_modules/normalize-package-data/package.json","includedInParent":true,"mtime":1541009984000},{"name":"./fixer","loc":{"line":3,"column":20},"parent":"/Users/rudraaiyar/Documents/hciui/node_modules/normalize-package-data/lib/normalize.js","resolved":"/Users/rudraaiyar/Documents/hciui/node_modules/normalize-package-data/lib/fixer.js"},{"name":"./make_warning","loc":{"line":6,"column":26},"parent":"/Users/rudraaiyar/Documents/hciui/node_modules/normalize-package-data/lib/normalize.js","resolved":"/Users/rudraaiyar/Documents/hciui/node_modules/normalize-package-data/lib/make_warning.js"}],"generated":{"js":"module.exports = normalize\n\nvar fixer = require(\"./fixer\")\nnormalize.fixer = fixer\n\nvar makeWarning = require(\"./make_warning\")\n\nvar fieldsToFix = ['name','version','description','repository','modules','scripts'\n                  ,'files','bin','man','bugs','keywords','readme','homepage','license']\nvar otherThingsToFix = ['dependencies','people', 'typos']\n\nvar thingsToFix = fieldsToFix.map(function(fieldName) {\n  return ucFirst(fieldName) + \"Field\"\n})\n// two ways to do this in CoffeeScript on only one line, sub-70 chars:\n// thingsToFix = fieldsToFix.map (name) -> ucFirst(name) + \"Field\"\n// thingsToFix = (ucFirst(name) + \"Field\" for name in fieldsToFix)\nthingsToFix = thingsToFix.concat(otherThingsToFix)\n\nfunction normalize (data, warn, strict) {\n  if(warn === true) warn = null, strict = true\n  if(!strict) strict = false\n  if(!warn || data.private) warn = function(msg) { /* noop */ }\n\n  if (data.scripts &&\n      data.scripts.install === \"node-gyp rebuild\" &&\n      !data.scripts.preinstall) {\n    data.gypfile = true\n  }\n  fixer.warn = function() { warn(makeWarning.apply(null, arguments)) }\n  thingsToFix.forEach(function(thingName) {\n    fixer[\"fix\" + ucFirst(thingName)](data, strict)\n  })\n  data._id = data.name + \"@\" + data.version\n}\n\nfunction ucFirst (string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","map":{"mappings":[{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/normalize-package-data/lib/normalize.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}}],"sources":{"node_modules/normalize-package-data/lib/normalize.js":"module.exports = normalize\n\nvar fixer = require(\"./fixer\")\nnormalize.fixer = fixer\n\nvar makeWarning = require(\"./make_warning\")\n\nvar fieldsToFix = ['name','version','description','repository','modules','scripts'\n                  ,'files','bin','man','bugs','keywords','readme','homepage','license']\nvar otherThingsToFix = ['dependencies','people', 'typos']\n\nvar thingsToFix = fieldsToFix.map(function(fieldName) {\n  return ucFirst(fieldName) + \"Field\"\n})\n// two ways to do this in CoffeeScript on only one line, sub-70 chars:\n// thingsToFix = fieldsToFix.map (name) -> ucFirst(name) + \"Field\"\n// thingsToFix = (ucFirst(name) + \"Field\" for name in fieldsToFix)\nthingsToFix = thingsToFix.concat(otherThingsToFix)\n\nfunction normalize (data, warn, strict) {\n  if(warn === true) warn = null, strict = true\n  if(!strict) strict = false\n  if(!warn || data.private) warn = function(msg) { /* noop */ }\n\n  if (data.scripts &&\n      data.scripts.install === \"node-gyp rebuild\" &&\n      !data.scripts.preinstall) {\n    data.gypfile = true\n  }\n  fixer.warn = function() { warn(makeWarning.apply(null, arguments)) }\n  thingsToFix.forEach(function(thingName) {\n    fixer[\"fix\" + ucFirst(thingName)](data, strict)\n  })\n  data._id = data.name + \"@\" + data.version\n}\n\nfunction ucFirst (string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n"},"lineCount":40}},"hash":"1616cb0db6ee21737bcc5b45f4f17ec8","cacheData":{"env":{}}}