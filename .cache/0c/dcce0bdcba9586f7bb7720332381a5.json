{"id":"node_modules/spdx-expression-parse/scan.js","dependencies":[{"name":"/Users/rudraaiyar/Documents/hciui/package.json","includedInParent":true,"mtime":1541009997000},{"name":"/Users/rudraaiyar/Documents/hciui/node_modules/spdx-expression-parse/package.json","includedInParent":true,"mtime":1541009984000},{"name":"spdx-license-ids","loc":{"line":4,"column":18},"parent":"/Users/rudraaiyar/Documents/hciui/node_modules/spdx-expression-parse/scan.js","resolved":"/Users/rudraaiyar/Documents/hciui/node_modules/spdx-license-ids/index.json"},{"name":"spdx-license-ids/deprecated","loc":{"line":5,"column":18},"parent":"/Users/rudraaiyar/Documents/hciui/node_modules/spdx-expression-parse/scan.js","resolved":"/Users/rudraaiyar/Documents/hciui/node_modules/spdx-license-ids/deprecated.json"},{"name":"spdx-exceptions","loc":{"line":6,"column":25},"parent":"/Users/rudraaiyar/Documents/hciui/node_modules/spdx-expression-parse/scan.js","resolved":"/Users/rudraaiyar/Documents/hciui/node_modules/spdx-exceptions/index.json"}],"generated":{"js":"'use strict'\n\nvar licenses = []\n  .concat(require('spdx-license-ids'))\n  .concat(require('spdx-license-ids/deprecated'))\nvar exceptions = require('spdx-exceptions')\n\nmodule.exports = function (source) {\n  var index = 0\n\n  function hasMore () {\n    return index < source.length\n  }\n\n  // `value` can be a regexp or a string.\n  // If it is recognized, the matching source string is returned and\n  // the index is incremented. Otherwise `undefined` is returned.\n  function read (value) {\n    if (value instanceof RegExp) {\n      var chars = source.slice(index)\n      var match = chars.match(value)\n      if (match) {\n        index += match[0].length\n        return match[0]\n      }\n    } else {\n      if (source.indexOf(value, index) === index) {\n        index += value.length\n        return value\n      }\n    }\n  }\n\n  function skipWhitespace () {\n    read(/[ ]*/)\n  }\n\n  function operator () {\n    var string\n    var possibilities = ['WITH', 'AND', 'OR', '(', ')', ':', '+']\n    for (var i = 0; i < possibilities.length; i++) {\n      string = read(possibilities[i])\n      if (string) {\n        break\n      }\n    }\n\n    if (string === '+' && index > 1 && source[index - 2] === ' ') {\n      throw new Error('Space before `+`')\n    }\n\n    return string && {\n      type: 'OPERATOR',\n      string: string\n    }\n  }\n\n  function idstring () {\n    return read(/[A-Za-z0-9-.]+/)\n  }\n\n  function expectIdstring () {\n    var string = idstring()\n    if (!string) {\n      throw new Error('Expected idstring at offset ' + index)\n    }\n    return string\n  }\n\n  function documentRef () {\n    if (read('DocumentRef-')) {\n      var string = expectIdstring()\n      return {type: 'DOCUMENTREF', string: string}\n    }\n  }\n\n  function licenseRef () {\n    if (read('LicenseRef-')) {\n      var string = expectIdstring()\n      return {type: 'LICENSEREF', string: string}\n    }\n  }\n\n  function identifier () {\n    var begin = index\n    var string = idstring()\n\n    if (licenses.indexOf(string) !== -1) {\n      return {\n        type: 'LICENSE',\n        string: string\n      }\n    } else if (exceptions.indexOf(string) !== -1) {\n      return {\n        type: 'EXCEPTION',\n        string: string\n      }\n    }\n\n    index = begin\n  }\n\n  // Tries to read the next token. Returns `undefined` if no token is\n  // recognized.\n  function parseToken () {\n    // Ordering matters\n    return (\n      operator() ||\n      documentRef() ||\n      licenseRef() ||\n      identifier()\n    )\n  }\n\n  var tokens = []\n  while (hasMore()) {\n    skipWhitespace()\n    if (!hasMore()) {\n      break\n    }\n\n    var token = parseToken()\n    if (!token) {\n      throw new Error('Unexpected `' + source[index] +\n                      '` at offset ' + index)\n    }\n\n    tokens.push(token)\n  }\n  return tokens\n}\n","map":{"mappings":[{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/spdx-expression-parse/scan.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}}],"sources":{"node_modules/spdx-expression-parse/scan.js":"'use strict'\n\nvar licenses = []\n  .concat(require('spdx-license-ids'))\n  .concat(require('spdx-license-ids/deprecated'))\nvar exceptions = require('spdx-exceptions')\n\nmodule.exports = function (source) {\n  var index = 0\n\n  function hasMore () {\n    return index < source.length\n  }\n\n  // `value` can be a regexp or a string.\n  // If it is recognized, the matching source string is returned and\n  // the index is incremented. Otherwise `undefined` is returned.\n  function read (value) {\n    if (value instanceof RegExp) {\n      var chars = source.slice(index)\n      var match = chars.match(value)\n      if (match) {\n        index += match[0].length\n        return match[0]\n      }\n    } else {\n      if (source.indexOf(value, index) === index) {\n        index += value.length\n        return value\n      }\n    }\n  }\n\n  function skipWhitespace () {\n    read(/[ ]*/)\n  }\n\n  function operator () {\n    var string\n    var possibilities = ['WITH', 'AND', 'OR', '(', ')', ':', '+']\n    for (var i = 0; i < possibilities.length; i++) {\n      string = read(possibilities[i])\n      if (string) {\n        break\n      }\n    }\n\n    if (string === '+' && index > 1 && source[index - 2] === ' ') {\n      throw new Error('Space before `+`')\n    }\n\n    return string && {\n      type: 'OPERATOR',\n      string: string\n    }\n  }\n\n  function idstring () {\n    return read(/[A-Za-z0-9-.]+/)\n  }\n\n  function expectIdstring () {\n    var string = idstring()\n    if (!string) {\n      throw new Error('Expected idstring at offset ' + index)\n    }\n    return string\n  }\n\n  function documentRef () {\n    if (read('DocumentRef-')) {\n      var string = expectIdstring()\n      return {type: 'DOCUMENTREF', string: string}\n    }\n  }\n\n  function licenseRef () {\n    if (read('LicenseRef-')) {\n      var string = expectIdstring()\n      return {type: 'LICENSEREF', string: string}\n    }\n  }\n\n  function identifier () {\n    var begin = index\n    var string = idstring()\n\n    if (licenses.indexOf(string) !== -1) {\n      return {\n        type: 'LICENSE',\n        string: string\n      }\n    } else if (exceptions.indexOf(string) !== -1) {\n      return {\n        type: 'EXCEPTION',\n        string: string\n      }\n    }\n\n    index = begin\n  }\n\n  // Tries to read the next token. Returns `undefined` if no token is\n  // recognized.\n  function parseToken () {\n    // Ordering matters\n    return (\n      operator() ||\n      documentRef() ||\n      licenseRef() ||\n      identifier()\n    )\n  }\n\n  var tokens = []\n  while (hasMore()) {\n    skipWhitespace()\n    if (!hasMore()) {\n      break\n    }\n\n    var token = parseToken()\n    if (!token) {\n      throw new Error('Unexpected `' + source[index] +\n                      '` at offset ' + index)\n    }\n\n    tokens.push(token)\n  }\n  return tokens\n}\n"},"lineCount":132}},"hash":"29248c8a064b88b11c6d923b156ae868","cacheData":{"env":{}}}