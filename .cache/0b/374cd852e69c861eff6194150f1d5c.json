{"id":"node_modules/rimraf/rimraf.js","dependencies":[{"name":"/Users/rudraaiyar/Documents/hciui/package.json","includedInParent":true,"mtime":1541009997000},{"name":"/Users/rudraaiyar/Documents/hciui/node_modules/rimraf/package.json","includedInParent":true,"mtime":1541009977000},{"name":"path","loc":{"line":4,"column":19},"parent":"/Users/rudraaiyar/Documents/hciui/node_modules/rimraf/rimraf.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/path-browserify/index.js"},{"name":"graceful-fs","optional":true,"loc":{"line":9,"column":15},"parent":"/Users/rudraaiyar/Documents/hciui/node_modules/rimraf/rimraf.js","resolved":"/Users/rudraaiyar/Documents/hciui/node_modules/graceful-fs/graceful-fs.js"},{"name":"fs","optional":true,"loc":{"line":11,"column":15},"parent":"/Users/rudraaiyar/Documents/hciui/node_modules/rimraf/rimraf.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"constants","loc":{"line":111,"column":26},"parent":"/Users/rudraaiyar/Documents/hciui/node_modules/rimraf/rimraf.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/constants-browserify/constants.json"},{"name":"process","parent":"/Users/rudraaiyar/Documents/hciui/node_modules/rimraf/rimraf.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\nmodule.exports = rimraf\nrimraf.sync = rimrafSync\n\nvar path = require(\"path\")\n  , fs\n\ntry {\n  // optional dependency\n  fs = require(\"graceful-fs\")\n} catch (er) {\n  fs = require(\"fs\")\n}\n\nvar lstat = process.platform === \"win32\" ? \"stat\" : \"lstat\"\n  , lstatSync = lstat + \"Sync\"\n\n// for EMFILE handling\nvar timeout = 0\n  , EMFILE_MAX = 1000\n\nfunction rimraf (p, opts, cb) {\n  if (typeof opts === \"function\") cb = opts, opts = {}\n\n  if (!cb) throw new Error(\"No callback passed to rimraf()\")\n  if (!opts) opts = {}\n\n  var busyTries = 0\n  opts.maxBusyTries = opts.maxBusyTries || 3\n\n  if (opts.gently) opts.gently = path.resolve(opts.gently)\n\n  rimraf_(p, opts, function CB (er) {\n    if (er) {\n      if (er.code === \"EBUSY\" && busyTries < opts.maxBusyTries) {\n        var time = (opts.maxBusyTries - busyTries) * 100\n        busyTries ++\n        // try again, with the same exact callback as this one.\n        return setTimeout(function () {\n          rimraf_(p, opts, CB)\n        })\n      }\n\n      // this one won't happen if graceful-fs is used.\n      if (er.code === \"EMFILE\" && timeout < EMFILE_MAX) {\n        return setTimeout(function () {\n          rimraf_(p, opts, CB)\n        }, timeout ++)\n      }\n\n      // already gone\n      if (er.code === \"ENOENT\") er = null\n    }\n\n    timeout = 0\n    cb(er)\n  })\n}\n\nfunction rimraf_ (p, opts, cb) {\n  fs[lstat](p, function (er, s) {\n    // if the stat fails, then assume it's already gone.\n    if (er) {\n      // already gone\n      if (er.code === \"ENOENT\") return cb()\n      // some other kind of error, permissions, etc.\n      return cb(er)\n    }\n\n    // don't delete that don't point actually live in the \"gently\" path\n    if (opts.gently) return clobberTest(p, s, opts, cb)\n    return rm_(p, s, opts, cb)\n  })\n}\n\nfunction rm_ (p, s, opts, cb) {\n  if (!s.isDirectory()) return fs.unlink(p, cb)\n  fs.readdir(p, function (er, files) {\n    if (er) return cb(er)\n    asyncForEach(files.map(function (f) {\n      return path.join(p, f)\n    }), function (file, cb) {\n      rimraf(file, opts, cb)\n    }, function (er) {\n      if (er) return cb(er)\n      fs.rmdir(p, cb)\n    })\n  })\n}\n\nfunction clobberTest (p, s, opts, cb) {\n  var gently = opts.gently\n  if (!s.isSymbolicLink()) next(null, path.resolve(p))\n  else realish(p, next)\n\n  function next (er, rp) {\n    if (er) return rm_(p, s, cb)\n    if (rp.indexOf(gently) !== 0) return clobberFail(p, gently, cb)\n    else return rm_(p, s, opts, cb)\n  }\n}\n\nfunction realish (p, cb) {\n  fs.readlink(p, function (er, r) {\n    if (er) return cb(er)\n    return cb(null, path.resolve(path.dirname(p), r))\n  })\n}\n\nfunction clobberFail (p, g, cb) {\n  var er = new Error(\"Refusing to delete: \"+p+\" not in \"+g)\n    , constants = require(\"constants\")\n  er.errno = constants.EEXIST\n  er.code = \"EEXIST\"\n  er.path = p\n  return cb(er)\n}\n\nfunction asyncForEach (list, fn, cb) {\n  if (!list.length) cb()\n  var c = list.length\n    , errState = null\n  list.forEach(function (item, i, list) {\n    fn(item, function (er) {\n      if (errState) return\n      if (er) return cb(errState = er)\n      if (-- c === 0) return cb()\n    })\n  })\n}\n\n// this looks simpler, but it will fail with big directory trees,\n// or on slow stupid awful cygwin filesystems\nfunction rimrafSync (p) {\n  try {\n    var s = fs[lstatSync](p)\n  } catch (er) {\n    if (er.code === \"ENOENT\") return\n    throw er\n  }\n  if (!s.isDirectory()) return fs.unlinkSync(p)\n  fs.readdirSync(p).forEach(function (f) {\n    rimrafSync(path.join(p, f))\n  })\n  fs.rmdirSync(p)\n}\n","map":{"mappings":[{"source":"node_modules/rimraf/rimraf.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/rimraf/rimraf.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}}],"sources":{"node_modules/rimraf/rimraf.js":"module.exports = rimraf\nrimraf.sync = rimrafSync\n\nvar path = require(\"path\")\n  , fs\n\ntry {\n  // optional dependency\n  fs = require(\"graceful-fs\")\n} catch (er) {\n  fs = require(\"fs\")\n}\n\nvar lstat = process.platform === \"win32\" ? \"stat\" : \"lstat\"\n  , lstatSync = lstat + \"Sync\"\n\n// for EMFILE handling\nvar timeout = 0\n  , EMFILE_MAX = 1000\n\nfunction rimraf (p, opts, cb) {\n  if (typeof opts === \"function\") cb = opts, opts = {}\n\n  if (!cb) throw new Error(\"No callback passed to rimraf()\")\n  if (!opts) opts = {}\n\n  var busyTries = 0\n  opts.maxBusyTries = opts.maxBusyTries || 3\n\n  if (opts.gently) opts.gently = path.resolve(opts.gently)\n\n  rimraf_(p, opts, function CB (er) {\n    if (er) {\n      if (er.code === \"EBUSY\" && busyTries < opts.maxBusyTries) {\n        var time = (opts.maxBusyTries - busyTries) * 100\n        busyTries ++\n        // try again, with the same exact callback as this one.\n        return setTimeout(function () {\n          rimraf_(p, opts, CB)\n        })\n      }\n\n      // this one won't happen if graceful-fs is used.\n      if (er.code === \"EMFILE\" && timeout < EMFILE_MAX) {\n        return setTimeout(function () {\n          rimraf_(p, opts, CB)\n        }, timeout ++)\n      }\n\n      // already gone\n      if (er.code === \"ENOENT\") er = null\n    }\n\n    timeout = 0\n    cb(er)\n  })\n}\n\nfunction rimraf_ (p, opts, cb) {\n  fs[lstat](p, function (er, s) {\n    // if the stat fails, then assume it's already gone.\n    if (er) {\n      // already gone\n      if (er.code === \"ENOENT\") return cb()\n      // some other kind of error, permissions, etc.\n      return cb(er)\n    }\n\n    // don't delete that don't point actually live in the \"gently\" path\n    if (opts.gently) return clobberTest(p, s, opts, cb)\n    return rm_(p, s, opts, cb)\n  })\n}\n\nfunction rm_ (p, s, opts, cb) {\n  if (!s.isDirectory()) return fs.unlink(p, cb)\n  fs.readdir(p, function (er, files) {\n    if (er) return cb(er)\n    asyncForEach(files.map(function (f) {\n      return path.join(p, f)\n    }), function (file, cb) {\n      rimraf(file, opts, cb)\n    }, function (er) {\n      if (er) return cb(er)\n      fs.rmdir(p, cb)\n    })\n  })\n}\n\nfunction clobberTest (p, s, opts, cb) {\n  var gently = opts.gently\n  if (!s.isSymbolicLink()) next(null, path.resolve(p))\n  else realish(p, next)\n\n  function next (er, rp) {\n    if (er) return rm_(p, s, cb)\n    if (rp.indexOf(gently) !== 0) return clobberFail(p, gently, cb)\n    else return rm_(p, s, opts, cb)\n  }\n}\n\nfunction realish (p, cb) {\n  fs.readlink(p, function (er, r) {\n    if (er) return cb(er)\n    return cb(null, path.resolve(path.dirname(p), r))\n  })\n}\n\nfunction clobberFail (p, g, cb) {\n  var er = new Error(\"Refusing to delete: \"+p+\" not in \"+g)\n    , constants = require(\"constants\")\n  er.errno = constants.EEXIST\n  er.code = \"EEXIST\"\n  er.path = p\n  return cb(er)\n}\n\nfunction asyncForEach (list, fn, cb) {\n  if (!list.length) cb()\n  var c = list.length\n    , errState = null\n  list.forEach(function (item, i, list) {\n    fn(item, function (er) {\n      if (errState) return\n      if (er) return cb(errState = er)\n      if (-- c === 0) return cb()\n    })\n  })\n}\n\n// this looks simpler, but it will fail with big directory trees,\n// or on slow stupid awful cygwin filesystems\nfunction rimrafSync (p) {\n  try {\n    var s = fs[lstatSync](p)\n  } catch (er) {\n    if (er.code === \"ENOENT\") return\n    throw er\n  }\n  if (!s.isDirectory()) return fs.unlinkSync(p)\n  fs.readdirSync(p).forEach(function (f) {\n    rimrafSync(path.join(p, f))\n  })\n  fs.rmdirSync(p)\n}\n"},"lineCount":147}},"hash":"6185d578fa9d4a0fade684a988b3dc31","cacheData":{"env":{}}}