{"id":"node_modules/cliui/index.js","dependencies":[{"name":"/Users/rudraaiyar/Documents/hciui/package.json","includedInParent":true,"mtime":1541009997000},{"name":"/Users/rudraaiyar/Documents/hciui/node_modules/cliui/package.json","includedInParent":true,"mtime":1541009984000},{"name":"string-width","loc":{"line":1,"column":26},"parent":"/Users/rudraaiyar/Documents/hciui/node_modules/cliui/index.js","resolved":"/Users/rudraaiyar/Documents/hciui/node_modules/string-width/index.js"},{"name":"strip-ansi","loc":{"line":2,"column":24},"parent":"/Users/rudraaiyar/Documents/hciui/node_modules/cliui/index.js","resolved":"/Users/rudraaiyar/Documents/hciui/node_modules/strip-ansi/index.js"},{"name":"wrap-ansi","loc":{"line":3,"column":19},"parent":"/Users/rudraaiyar/Documents/hciui/node_modules/cliui/index.js","resolved":"/Users/rudraaiyar/Documents/hciui/node_modules/wrap-ansi/index.js"}],"generated":{"js":"var stringWidth = require('string-width')\nvar stripAnsi = require('strip-ansi')\nvar wrap = require('wrap-ansi')\nvar align = {\n  right: alignRight,\n  center: alignCenter\n}\nvar top = 0\nvar right = 1\nvar bottom = 2\nvar left = 3\n\nfunction UI (opts) {\n  this.width = opts.width\n  this.wrap = opts.wrap\n  this.rows = []\n}\n\nUI.prototype.span = function () {\n  var cols = this.div.apply(this, arguments)\n  cols.span = true\n}\n\nUI.prototype.div = function () {\n  if (arguments.length === 0) this.div('')\n  if (this.wrap && this._shouldApplyLayoutDSL.apply(this, arguments)) {\n    return this._applyLayoutDSL(arguments[0])\n  }\n\n  var cols = []\n\n  for (var i = 0, arg; (arg = arguments[i]) !== undefined; i++) {\n    if (typeof arg === 'string') cols.push(this._colFromString(arg))\n    else cols.push(arg)\n  }\n\n  this.rows.push(cols)\n  return cols\n}\n\nUI.prototype._shouldApplyLayoutDSL = function () {\n  return arguments.length === 1 && typeof arguments[0] === 'string' &&\n    /[\\t\\n]/.test(arguments[0])\n}\n\nUI.prototype._applyLayoutDSL = function (str) {\n  var _this = this\n  var rows = str.split('\\n')\n  var leftColumnWidth = 0\n\n  // simple heuristic for layout, make sure the\n  // second column lines up along the left-hand.\n  // don't allow the first column to take up more\n  // than 50% of the screen.\n  rows.forEach(function (row) {\n    var columns = row.split('\\t')\n    if (columns.length > 1 && stringWidth(columns[0]) > leftColumnWidth) {\n      leftColumnWidth = Math.min(\n        Math.floor(_this.width * 0.5),\n        stringWidth(columns[0])\n      )\n    }\n  })\n\n  // generate a table:\n  //  replacing ' ' with padding calculations.\n  //  using the algorithmically generated width.\n  rows.forEach(function (row) {\n    var columns = row.split('\\t')\n    _this.div.apply(_this, columns.map(function (r, i) {\n      return {\n        text: r.trim(),\n        padding: _this._measurePadding(r),\n        width: (i === 0 && columns.length > 1) ? leftColumnWidth : undefined\n      }\n    }))\n  })\n\n  return this.rows[this.rows.length - 1]\n}\n\nUI.prototype._colFromString = function (str) {\n  return {\n    text: str,\n    padding: this._measurePadding(str)\n  }\n}\n\nUI.prototype._measurePadding = function (str) {\n  // measure padding without ansi escape codes\n  var noAnsi = stripAnsi(str)\n  return [0, noAnsi.match(/\\s*$/)[0].length, 0, noAnsi.match(/^\\s*/)[0].length]\n}\n\nUI.prototype.toString = function () {\n  var _this = this\n  var lines = []\n\n  _this.rows.forEach(function (row, i) {\n    _this.rowToString(row, lines)\n  })\n\n  // don't display any lines with the\n  // hidden flag set.\n  lines = lines.filter(function (line) {\n    return !line.hidden\n  })\n\n  return lines.map(function (line) {\n    return line.text\n  }).join('\\n')\n}\n\nUI.prototype.rowToString = function (row, lines) {\n  var _this = this\n  var padding\n  var rrows = this._rasterize(row)\n  var str = ''\n  var ts\n  var width\n  var wrapWidth\n\n  rrows.forEach(function (rrow, r) {\n    str = ''\n    rrow.forEach(function (col, c) {\n      ts = '' // temporary string used during alignment/padding.\n      width = row[c].width // the width with padding.\n      wrapWidth = _this._negatePadding(row[c]) // the width without padding.\n\n      ts += col\n\n      for (var i = 0; i < wrapWidth - stringWidth(col); i++) {\n        ts += ' '\n      }\n\n      // align the string within its column.\n      if (row[c].align && row[c].align !== 'left' && _this.wrap) {\n        ts = align[row[c].align](ts, wrapWidth)\n        if (stringWidth(ts) < wrapWidth) ts += new Array(width - stringWidth(ts)).join(' ')\n      }\n\n      // apply border and padding to string.\n      padding = row[c].padding || [0, 0, 0, 0]\n      if (padding[left]) str += new Array(padding[left] + 1).join(' ')\n      str += addBorder(row[c], ts, '| ')\n      str += ts\n      str += addBorder(row[c], ts, ' |')\n      if (padding[right]) str += new Array(padding[right] + 1).join(' ')\n\n      // if prior row is span, try to render the\n      // current row on the prior line.\n      if (r === 0 && lines.length > 0) {\n        str = _this._renderInline(str, lines[lines.length - 1])\n      }\n    })\n\n    // remove trailing whitespace.\n    lines.push({\n      text: str.replace(/ +$/, ''),\n      span: row.span\n    })\n  })\n\n  return lines\n}\n\nfunction addBorder (col, ts, style) {\n  if (col.border) {\n    if (/[.']-+[.']/.test(ts)) return ''\n    else if (ts.trim().length) return style\n    else return '  '\n  }\n  return ''\n}\n\n// if the full 'source' can render in\n// the target line, do so.\nUI.prototype._renderInline = function (source, previousLine) {\n  var leadingWhitespace = source.match(/^ */)[0].length\n  var target = previousLine.text\n  var targetTextWidth = stringWidth(target.trimRight())\n\n  if (!previousLine.span) return source\n\n  // if we're not applying wrapping logic,\n  // just always append to the span.\n  if (!this.wrap) {\n    previousLine.hidden = true\n    return target + source\n  }\n\n  if (leadingWhitespace < targetTextWidth) return source\n\n  previousLine.hidden = true\n\n  return target.trimRight() + new Array(leadingWhitespace - targetTextWidth + 1).join(' ') + source.trimLeft()\n}\n\nUI.prototype._rasterize = function (row) {\n  var _this = this\n  var i\n  var rrow\n  var rrows = []\n  var widths = this._columnWidths(row)\n  var wrapped\n\n  // word wrap all columns, and create\n  // a data-structure that is easy to rasterize.\n  row.forEach(function (col, c) {\n    // leave room for left and right padding.\n    col.width = widths[c]\n    if (_this.wrap) wrapped = wrap(col.text, _this._negatePadding(col), {hard: true}).split('\\n')\n    else wrapped = col.text.split('\\n')\n\n    if (col.border) {\n      wrapped.unshift('.' + new Array(_this._negatePadding(col) + 3).join('-') + '.')\n      wrapped.push(\"'\" + new Array(_this._negatePadding(col) + 3).join('-') + \"'\")\n    }\n\n    // add top and bottom padding.\n    if (col.padding) {\n      for (i = 0; i < (col.padding[top] || 0); i++) wrapped.unshift('')\n      for (i = 0; i < (col.padding[bottom] || 0); i++) wrapped.push('')\n    }\n\n    wrapped.forEach(function (str, r) {\n      if (!rrows[r]) rrows.push([])\n\n      rrow = rrows[r]\n\n      for (var i = 0; i < c; i++) {\n        if (rrow[i] === undefined) rrow.push('')\n      }\n      rrow.push(str)\n    })\n  })\n\n  return rrows\n}\n\nUI.prototype._negatePadding = function (col) {\n  var wrapWidth = col.width\n  if (col.padding) wrapWidth -= (col.padding[left] || 0) + (col.padding[right] || 0)\n  if (col.border) wrapWidth -= 4\n  return wrapWidth\n}\n\nUI.prototype._columnWidths = function (row) {\n  var _this = this\n  var widths = []\n  var unset = row.length\n  var unsetWidth\n  var remainingWidth = this.width\n\n  // column widths can be set in config.\n  row.forEach(function (col, i) {\n    if (col.width) {\n      unset--\n      widths[i] = col.width\n      remainingWidth -= col.width\n    } else {\n      widths[i] = undefined\n    }\n  })\n\n  // any unset widths should be calculated.\n  if (unset) unsetWidth = Math.floor(remainingWidth / unset)\n  widths.forEach(function (w, i) {\n    if (!_this.wrap) widths[i] = row[i].width || stringWidth(row[i].text)\n    else if (w === undefined) widths[i] = Math.max(unsetWidth, _minWidth(row[i]))\n  })\n\n  return widths\n}\n\n// calculates the minimum width of\n// a column, based on padding preferences.\nfunction _minWidth (col) {\n  var padding = col.padding || []\n  var minWidth = 1 + (padding[left] || 0) + (padding[right] || 0)\n  if (col.border) minWidth += 4\n  return minWidth\n}\n\nfunction alignRight (str, width) {\n  str = str.trim()\n  var padding = ''\n  var strWidth = stringWidth(str)\n\n  if (strWidth < width) {\n    padding = new Array(width - strWidth + 1).join(' ')\n  }\n\n  return padding + str\n}\n\nfunction alignCenter (str, width) {\n  str = str.trim()\n  var padding = ''\n  var strWidth = stringWidth(str.trim())\n\n  if (strWidth < width) {\n    padding = new Array(parseInt((width - strWidth) / 2, 10) + 1).join(' ')\n  }\n\n  return padding + str\n}\n\nmodule.exports = function (opts) {\n  opts = opts || {}\n\n  return new UI({\n    width: (opts || {}).width || 80,\n    wrap: typeof opts.wrap === 'boolean' ? opts.wrap : true\n  })\n}\n","map":{"mappings":[{"source":"node_modules/cliui/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/cliui/index.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}}],"sources":{"node_modules/cliui/index.js":"var stringWidth = require('string-width')\nvar stripAnsi = require('strip-ansi')\nvar wrap = require('wrap-ansi')\nvar align = {\n  right: alignRight,\n  center: alignCenter\n}\nvar top = 0\nvar right = 1\nvar bottom = 2\nvar left = 3\n\nfunction UI (opts) {\n  this.width = opts.width\n  this.wrap = opts.wrap\n  this.rows = []\n}\n\nUI.prototype.span = function () {\n  var cols = this.div.apply(this, arguments)\n  cols.span = true\n}\n\nUI.prototype.div = function () {\n  if (arguments.length === 0) this.div('')\n  if (this.wrap && this._shouldApplyLayoutDSL.apply(this, arguments)) {\n    return this._applyLayoutDSL(arguments[0])\n  }\n\n  var cols = []\n\n  for (var i = 0, arg; (arg = arguments[i]) !== undefined; i++) {\n    if (typeof arg === 'string') cols.push(this._colFromString(arg))\n    else cols.push(arg)\n  }\n\n  this.rows.push(cols)\n  return cols\n}\n\nUI.prototype._shouldApplyLayoutDSL = function () {\n  return arguments.length === 1 && typeof arguments[0] === 'string' &&\n    /[\\t\\n]/.test(arguments[0])\n}\n\nUI.prototype._applyLayoutDSL = function (str) {\n  var _this = this\n  var rows = str.split('\\n')\n  var leftColumnWidth = 0\n\n  // simple heuristic for layout, make sure the\n  // second column lines up along the left-hand.\n  // don't allow the first column to take up more\n  // than 50% of the screen.\n  rows.forEach(function (row) {\n    var columns = row.split('\\t')\n    if (columns.length > 1 && stringWidth(columns[0]) > leftColumnWidth) {\n      leftColumnWidth = Math.min(\n        Math.floor(_this.width * 0.5),\n        stringWidth(columns[0])\n      )\n    }\n  })\n\n  // generate a table:\n  //  replacing ' ' with padding calculations.\n  //  using the algorithmically generated width.\n  rows.forEach(function (row) {\n    var columns = row.split('\\t')\n    _this.div.apply(_this, columns.map(function (r, i) {\n      return {\n        text: r.trim(),\n        padding: _this._measurePadding(r),\n        width: (i === 0 && columns.length > 1) ? leftColumnWidth : undefined\n      }\n    }))\n  })\n\n  return this.rows[this.rows.length - 1]\n}\n\nUI.prototype._colFromString = function (str) {\n  return {\n    text: str,\n    padding: this._measurePadding(str)\n  }\n}\n\nUI.prototype._measurePadding = function (str) {\n  // measure padding without ansi escape codes\n  var noAnsi = stripAnsi(str)\n  return [0, noAnsi.match(/\\s*$/)[0].length, 0, noAnsi.match(/^\\s*/)[0].length]\n}\n\nUI.prototype.toString = function () {\n  var _this = this\n  var lines = []\n\n  _this.rows.forEach(function (row, i) {\n    _this.rowToString(row, lines)\n  })\n\n  // don't display any lines with the\n  // hidden flag set.\n  lines = lines.filter(function (line) {\n    return !line.hidden\n  })\n\n  return lines.map(function (line) {\n    return line.text\n  }).join('\\n')\n}\n\nUI.prototype.rowToString = function (row, lines) {\n  var _this = this\n  var padding\n  var rrows = this._rasterize(row)\n  var str = ''\n  var ts\n  var width\n  var wrapWidth\n\n  rrows.forEach(function (rrow, r) {\n    str = ''\n    rrow.forEach(function (col, c) {\n      ts = '' // temporary string used during alignment/padding.\n      width = row[c].width // the width with padding.\n      wrapWidth = _this._negatePadding(row[c]) // the width without padding.\n\n      ts += col\n\n      for (var i = 0; i < wrapWidth - stringWidth(col); i++) {\n        ts += ' '\n      }\n\n      // align the string within its column.\n      if (row[c].align && row[c].align !== 'left' && _this.wrap) {\n        ts = align[row[c].align](ts, wrapWidth)\n        if (stringWidth(ts) < wrapWidth) ts += new Array(width - stringWidth(ts)).join(' ')\n      }\n\n      // apply border and padding to string.\n      padding = row[c].padding || [0, 0, 0, 0]\n      if (padding[left]) str += new Array(padding[left] + 1).join(' ')\n      str += addBorder(row[c], ts, '| ')\n      str += ts\n      str += addBorder(row[c], ts, ' |')\n      if (padding[right]) str += new Array(padding[right] + 1).join(' ')\n\n      // if prior row is span, try to render the\n      // current row on the prior line.\n      if (r === 0 && lines.length > 0) {\n        str = _this._renderInline(str, lines[lines.length - 1])\n      }\n    })\n\n    // remove trailing whitespace.\n    lines.push({\n      text: str.replace(/ +$/, ''),\n      span: row.span\n    })\n  })\n\n  return lines\n}\n\nfunction addBorder (col, ts, style) {\n  if (col.border) {\n    if (/[.']-+[.']/.test(ts)) return ''\n    else if (ts.trim().length) return style\n    else return '  '\n  }\n  return ''\n}\n\n// if the full 'source' can render in\n// the target line, do so.\nUI.prototype._renderInline = function (source, previousLine) {\n  var leadingWhitespace = source.match(/^ */)[0].length\n  var target = previousLine.text\n  var targetTextWidth = stringWidth(target.trimRight())\n\n  if (!previousLine.span) return source\n\n  // if we're not applying wrapping logic,\n  // just always append to the span.\n  if (!this.wrap) {\n    previousLine.hidden = true\n    return target + source\n  }\n\n  if (leadingWhitespace < targetTextWidth) return source\n\n  previousLine.hidden = true\n\n  return target.trimRight() + new Array(leadingWhitespace - targetTextWidth + 1).join(' ') + source.trimLeft()\n}\n\nUI.prototype._rasterize = function (row) {\n  var _this = this\n  var i\n  var rrow\n  var rrows = []\n  var widths = this._columnWidths(row)\n  var wrapped\n\n  // word wrap all columns, and create\n  // a data-structure that is easy to rasterize.\n  row.forEach(function (col, c) {\n    // leave room for left and right padding.\n    col.width = widths[c]\n    if (_this.wrap) wrapped = wrap(col.text, _this._negatePadding(col), {hard: true}).split('\\n')\n    else wrapped = col.text.split('\\n')\n\n    if (col.border) {\n      wrapped.unshift('.' + new Array(_this._negatePadding(col) + 3).join('-') + '.')\n      wrapped.push(\"'\" + new Array(_this._negatePadding(col) + 3).join('-') + \"'\")\n    }\n\n    // add top and bottom padding.\n    if (col.padding) {\n      for (i = 0; i < (col.padding[top] || 0); i++) wrapped.unshift('')\n      for (i = 0; i < (col.padding[bottom] || 0); i++) wrapped.push('')\n    }\n\n    wrapped.forEach(function (str, r) {\n      if (!rrows[r]) rrows.push([])\n\n      rrow = rrows[r]\n\n      for (var i = 0; i < c; i++) {\n        if (rrow[i] === undefined) rrow.push('')\n      }\n      rrow.push(str)\n    })\n  })\n\n  return rrows\n}\n\nUI.prototype._negatePadding = function (col) {\n  var wrapWidth = col.width\n  if (col.padding) wrapWidth -= (col.padding[left] || 0) + (col.padding[right] || 0)\n  if (col.border) wrapWidth -= 4\n  return wrapWidth\n}\n\nUI.prototype._columnWidths = function (row) {\n  var _this = this\n  var widths = []\n  var unset = row.length\n  var unsetWidth\n  var remainingWidth = this.width\n\n  // column widths can be set in config.\n  row.forEach(function (col, i) {\n    if (col.width) {\n      unset--\n      widths[i] = col.width\n      remainingWidth -= col.width\n    } else {\n      widths[i] = undefined\n    }\n  })\n\n  // any unset widths should be calculated.\n  if (unset) unsetWidth = Math.floor(remainingWidth / unset)\n  widths.forEach(function (w, i) {\n    if (!_this.wrap) widths[i] = row[i].width || stringWidth(row[i].text)\n    else if (w === undefined) widths[i] = Math.max(unsetWidth, _minWidth(row[i]))\n  })\n\n  return widths\n}\n\n// calculates the minimum width of\n// a column, based on padding preferences.\nfunction _minWidth (col) {\n  var padding = col.padding || []\n  var minWidth = 1 + (padding[left] || 0) + (padding[right] || 0)\n  if (col.border) minWidth += 4\n  return minWidth\n}\n\nfunction alignRight (str, width) {\n  str = str.trim()\n  var padding = ''\n  var strWidth = stringWidth(str)\n\n  if (strWidth < width) {\n    padding = new Array(width - strWidth + 1).join(' ')\n  }\n\n  return padding + str\n}\n\nfunction alignCenter (str, width) {\n  str = str.trim()\n  var padding = ''\n  var strWidth = stringWidth(str.trim())\n\n  if (strWidth < width) {\n    padding = new Array(parseInt((width - strWidth) / 2, 10) + 1).join(' ')\n  }\n\n  return padding + str\n}\n\nmodule.exports = function (opts) {\n  opts = opts || {}\n\n  return new UI({\n    width: (opts || {}).width || 80,\n    wrap: typeof opts.wrap === 'boolean' ? opts.wrap : true\n  })\n}\n"},"lineCount":317}},"hash":"dd82207e6f4e633b0145c3ec1614e21a","cacheData":{"env":{}}}